{
	"id": "fdd82669e8642f5c115c39e710dd4b92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract basicToken {\n\n    address public owner;\n    uint public totalSupply;\n    uint public currentSupply;\n    uint public burnedTokens;\n    string public constant name = \"Patrick Basic Token\";\n    string public constant symbol = \"PBST\";\n    uint constant decimals = 18;\n\n    mapping(address => uint) public balances;\n\n    event Sent(address indexed from, address indexed to, uint amount);\n\n    constructor(uint _totalSupply) {\n        totalSupply = _totalSupply;\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner {\n        require(msg.sender == owner, \"You're not the owner\");\n        _;\n    }\n\n    function mint(address to, uint amount) public onlyOwner {\n        require(totalSupply >= currentSupply, \"All tokens already minted\");\n        require(to != address(0), \"ERC20: mint to the zero address\");\n        \n        balances[to] += amount;\n        currentSupply += amount;\n    }\n\n    function transfer(address to, uint amount) public {\n        require(amount <= balances[msg.sender], \"Not enough tokens\");\n        require(to != address(0), \"No mint to the zero address\");\n        require(amount <= currentSupply);\n        \n        balances[msg.sender] -= amount;\n        balances[to] += amount;\n        \n        burn(amount);\n        \n        emit Sent(msg.sender, to, amount);\n    }\n\n    function remainingSupply() public view returns(uint) {\n        return totalSupply - currentSupply;\n    }\n\n    function burn(uint amount) private {\n        totalSupply -= amount / 1000 * 1;\n        currentSupply -= amount / 1000 * 1;\n        burnedTokens += amount / 1000 * 1;\n    }\n\n    function halfing() public {\n        uint startTime = block.timestamp;\n        uint endTime = 60 + startTime;\n\n        if(endTime <= 0) {\n            totalSupply = totalSupply / 2;\n            currentSupply = currentSupply / 2;\n            burnedTokens = burnedTokens / 2;\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4543  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4556  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4546:4558  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4530:4558  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4577:4582  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3310  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3341  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5348  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5361  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5351:5363  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5333:5363  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5395:5402  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5458:5469  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3149:3154  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3166:3175  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:5988  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6001  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5991:6003  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5975:6003  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6022:6027  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6048:6053  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6055:6062  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6098  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6087:6098  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3515  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3523  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3524  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6714  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6727  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6717:6729  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6701:6729  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6763  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6776:6781  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7012  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7001:7012  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3835  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3848  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3838:3850  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3822:3850  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3870:3875  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3905:3909  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3898:3909  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4101:4106  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4108:4115  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4082:4116  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10652:10653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10640  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10733  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10720  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10814:10820  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10796:10801  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10810  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10851:10858  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10844:10849  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10860:10866  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11371:11388  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7615:7616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7603  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7691:7692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7679  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7765:7769  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7771:7773  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7775:7781  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7764  _beforeTokenTransfer */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7744:7782  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7824  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7825:7829  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7830  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7863:7869  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7859  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7978:7984  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7956:7960  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8178:8184  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8170  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8171:8173  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8225:8227  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8219:8223  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8229:8235  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8267:8271  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8277:8283  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8266  _afterTokenTransfer */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7581:8291  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12889:13009  function _afterTokenTransfer(... */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_141:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_143\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_145:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_147\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":373:492   */\n    tag_150:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_153\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_156\n      tag_152\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":725:844   */\n    tag_155:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_157\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_158\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_161\n      tag_152\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1222:1341   */\n    tag_160:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_162\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_163\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_141\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_164\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_145\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_167\n      tag_152\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1830:1949   */\n    tag_166:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_168\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_141\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_169\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_145\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_170:\n        /* \"#utility.yul\":2298:2319   */\n      tag_172\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_174:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_176\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2503:2574   */\n      tag_178\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_180\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2660:2689   */\n      tag_182\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_184:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_186\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_179\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_187\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_189:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_191\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_179\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_192\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_194:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_196\n        /* \"#utility.yul\":3673:3675   */\n      0x1d\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_179\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_197\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_199:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_201\n        /* \"#utility.yul\":4045:4047   */\n      0x26\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_179\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_202\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_204:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_206\n        /* \"#utility.yul\":4417:4419   */\n      0x25\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_179\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_207\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_209:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_211\n        /* \"#utility.yul\":4789:4791   */\n      0x24\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_179\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_212\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_214:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_216\n        /* \"#utility.yul\":5161:5163   */\n      0x25\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_179\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_217\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5424   */\n    tag_219:\n        /* \"#utility.yul\":5393:5417   */\n      tag_221\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5393:5417   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5388:5391   */\n      dup3\n        /* \"#utility.yul\":5381:5418   */\n      mstore\n        /* \"#utility.yul\":5306:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_223:\n        /* \"#utility.yul\":5513:5535   */\n      tag_225\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5758   */\n    tag_24:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:5751   */\n      tag_228\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5733:5750   */\n      add\n        /* \"#utility.yul\":5724:5730   */\n      dup5\n        /* \"#utility.yul\":5686:5751   */\n      tag_170\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5548:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6077   */\n    tag_18:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:5973   */\n      dup2\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      sub\n        /* \"#utility.yul\":5950:5951   */\n      0x00\n        /* \"#utility.yul\":5939:5948   */\n      dup4\n        /* \"#utility.yul\":5935:5952   */\n      add\n        /* \"#utility.yul\":5928:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6070   */\n      tag_230\n        /* \"#utility.yul\":6065:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":5992:6070   */\n      tag_174\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5984:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5764:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6502   */\n    tag_129:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6495   */\n      tag_232\n        /* \"#utility.yul\":6490:6494   */\n      dup2\n        /* \"#utility.yul\":6364:6495   */\n      tag_184\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6356:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6927   */\n    tag_114:\n        /* \"#utility.yul\":6674:6678   */\n      0x00\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6697:6715   */\n      add\n        /* \"#utility.yul\":6689:6715   */\n      swap1\n      pop\n        /* \"#utility.yul\":6761:6770   */\n      dup2\n        /* \"#utility.yul\":6755:6759   */\n      dup2\n        /* \"#utility.yul\":6751:6771   */\n      sub\n        /* \"#utility.yul\":6747:6748   */\n      0x00\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6749   */\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6920   */\n      tag_234\n        /* \"#utility.yul\":6915:6919   */\n      dup2\n        /* \"#utility.yul\":6789:6920   */\n      tag_189\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6781:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_121:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_236\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_194\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7777   */\n    tag_134:\n        /* \"#utility.yul\":7524:7528   */\n      0x00\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup3\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7539:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7611:7620   */\n      dup2\n        /* \"#utility.yul\":7605:7609   */\n      dup2\n        /* \"#utility.yul\":7601:7621   */\n      sub\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7599   */\n      add\n        /* \"#utility.yul\":7575:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7770   */\n      tag_238\n        /* \"#utility.yul\":7765:7769   */\n      dup2\n        /* \"#utility.yul\":7639:7770   */\n      tag_199\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7631:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8202   */\n    tag_126:\n        /* \"#utility.yul\":7949:7953   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x20\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7964:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8045   */\n      dup2\n        /* \"#utility.yul\":8030:8034   */\n      dup2\n        /* \"#utility.yul\":8026:8046   */\n      sub\n        /* \"#utility.yul\":8022:8023   */\n      0x00\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":8000:8047   */\n      mstore\n        /* \"#utility.yul\":8064:8195   */\n      tag_240\n        /* \"#utility.yul\":8190:8194   */\n      dup2\n        /* \"#utility.yul\":8064:8195   */\n      tag_204\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8056:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8627   */\n    tag_111:\n        /* \"#utility.yul\":8374:8378   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup3\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8389:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8470   */\n      dup2\n        /* \"#utility.yul\":8455:8459   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      sub\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8449   */\n      add\n        /* \"#utility.yul\":8425:8472   */\n      mstore\n        /* \"#utility.yul\":8489:8620   */\n      tag_242\n        /* \"#utility.yul\":8615:8619   */\n      dup2\n        /* \"#utility.yul\":8489:8620   */\n      tag_209\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8481:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9052   */\n    tag_101:\n        /* \"#utility.yul\":8799:8803   */\n      0x00\n        /* \"#utility.yul\":8837:8839   */\n      0x20\n        /* \"#utility.yul\":8826:8835   */\n      dup3\n        /* \"#utility.yul\":8822:8840   */\n      add\n        /* \"#utility.yul\":8814:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:8895   */\n      dup2\n        /* \"#utility.yul\":8880:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8896   */\n      sub\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8850:8897   */\n      mstore\n        /* \"#utility.yul\":8914:9045   */\n      tag_244\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":8914:9045   */\n      tag_214\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8906:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9280   */\n    tag_28:\n        /* \"#utility.yul\":9151:9155   */\n      0x00\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup3\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9166:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9273   */\n      tag_246\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9255:9272   */\n      add\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9202:9273   */\n      tag_219\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9058:9280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9286:9500   */\n    tag_37:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9493   */\n      tag_248\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9492   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9426:9493   */\n      tag_223\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9286:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9686   */\n    tag_177:\n        /* \"#utility.yul\":9639:9645   */\n      0x00\n        /* \"#utility.yul\":9673:9678   */\n      dup2\n        /* \"#utility.yul\":9667:9679   */\n      mload\n        /* \"#utility.yul\":9657:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:9861   */\n    tag_179:\n        /* \"#utility.yul\":9776:9787   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9817   */\n      mstore\n        /* \"#utility.yul\":9850:9854   */\n      0x20\n        /* \"#utility.yul\":9845:9848   */\n      dup3\n        /* \"#utility.yul\":9841:9855   */\n      add\n        /* \"#utility.yul\":9826:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:9861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9867:10172   */\n    tag_88:\n        /* \"#utility.yul\":9907:9910   */\n      0x00\n        /* \"#utility.yul\":9926:9946   */\n      tag_254\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9926:9946   */\n      tag_222\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9921:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9960:9980   */\n      tag_255\n        /* \"#utility.yul\":9978:9979   */\n      dup4\n        /* \"#utility.yul\":9960:9980   */\n      tag_222\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9955:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10115   */\n      dup3\n        /* \"#utility.yul\":10046:10112   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10042:10116   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      dup3\n        /* \"#utility.yul\":10036:10117   */\n      gt\n        /* \"#utility.yul\":10033:10140   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":10120:10138   */\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10033:10140   */\n    tag_256:\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9867:10172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10274   */\n    tag_259:\n        /* \"#utility.yul\":10215:10222   */\n      0x00\n        /* \"#utility.yul\":10244:10268   */\n      tag_261\n        /* \"#utility.yul\":10262:10267   */\n      dup3\n        /* \"#utility.yul\":10244:10268   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10233:10268   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10280:10370   */\n    tag_173:\n        /* \"#utility.yul\":10314:10321   */\n      0x00\n        /* \"#utility.yul\":10357:10362   */\n      dup2\n        /* \"#utility.yul\":10350:10363   */\n      iszero\n        /* \"#utility.yul\":10343:10364   */\n      iszero\n        /* \"#utility.yul\":10332:10364   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10376:10502   */\n    tag_262:\n        /* \"#utility.yul\":10413:10420   */\n      0x00\n        /* \"#utility.yul\":10453:10495   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10446:10451   */\n      dup3\n        /* \"#utility.yul\":10442:10496   */\n      and\n        /* \"#utility.yul\":10431:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10376:10502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10508:10585   */\n    tag_222:\n        /* \"#utility.yul\":10545:10552   */\n      0x00\n        /* \"#utility.yul\":10574:10579   */\n      dup2\n        /* \"#utility.yul\":10563:10579   */\n      swap1\n      pop\n        /* \"#utility.yul\":10508:10585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:10677   */\n    tag_226:\n        /* \"#utility.yul\":10626:10633   */\n      0x00\n        /* \"#utility.yul\":10666:10670   */\n      0xff\n        /* \"#utility.yul\":10659:10664   */\n      dup3\n        /* \"#utility.yul\":10655:10671   */\n      and\n        /* \"#utility.yul\":10644:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:10677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:10990   */\n    tag_181:\n        /* \"#utility.yul\":10751:10752   */\n      0x00\n        /* \"#utility.yul\":10761:10874   */\n    tag_268:\n        /* \"#utility.yul\":10775:10781   */\n      dup4\n        /* \"#utility.yul\":10772:10773   */\n      dup2\n        /* \"#utility.yul\":10769:10782   */\n      lt\n        /* \"#utility.yul\":10761:10874   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":10860:10861   */\n      dup1\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10851:10862   */\n      add\n        /* \"#utility.yul\":10845:10863   */\n      mload\n        /* \"#utility.yul\":10841:10842   */\n      dup2\n        /* \"#utility.yul\":10836:10839   */\n      dup5\n        /* \"#utility.yul\":10832:10843   */\n      add\n        /* \"#utility.yul\":10825:10864   */\n      mstore\n        /* \"#utility.yul\":10797:10799   */\n      0x20\n        /* \"#utility.yul\":10794:10795   */\n      dup2\n        /* \"#utility.yul\":10790:10800   */\n      add\n        /* \"#utility.yul\":10785:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10761:10874   */\n      jump(tag_268)\n    tag_270:\n        /* \"#utility.yul\":10892:10898   */\n      dup4\n        /* \"#utility.yul\":10889:10890   */\n      dup2\n        /* \"#utility.yul\":10886:10899   */\n      gt\n        /* \"#utility.yul\":10883:10984   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":10972:10973   */\n      0x00\n        /* \"#utility.yul\":10963:10969   */\n      dup5\n        /* \"#utility.yul\":10958:10961   */\n      dup5\n        /* \"#utility.yul\":10954:10970   */\n      add\n        /* \"#utility.yul\":10947:10974   */\n      mstore\n        /* \"#utility.yul\":10883:10984   */\n    tag_271:\n        /* \"#utility.yul\":10732:10990   */\n      pop\n        /* \"#utility.yul\":10683:10990   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11316   */\n    tag_65:\n        /* \"#utility.yul\":11040:11046   */\n      0x00\n        /* \"#utility.yul\":11077:11078   */\n      0x02\n        /* \"#utility.yul\":11071:11075   */\n      dup3\n        /* \"#utility.yul\":11067:11079   */\n      div\n        /* \"#utility.yul\":11057:11079   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11125   */\n      0x01\n        /* \"#utility.yul\":11118:11122   */\n      dup3\n        /* \"#utility.yul\":11114:11126   */\n      and\n        /* \"#utility.yul\":11145:11163   */\n      dup1\n        /* \"#utility.yul\":11135:11216   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":11201:11205   */\n      0x7f\n        /* \"#utility.yul\":11193:11199   */\n      dup3\n        /* \"#utility.yul\":11189:11206   */\n      and\n        /* \"#utility.yul\":11179:11206   */\n      swap2\n      pop\n        /* \"#utility.yul\":11135:11216   */\n    tag_273:\n        /* \"#utility.yul\":11263:11265   */\n      0x20\n        /* \"#utility.yul\":11255:11261   */\n      dup3\n        /* \"#utility.yul\":11252:11266   */\n      lt\n        /* \"#utility.yul\":11232:11250   */\n      dup2\n        /* \"#utility.yul\":11229:11267   */\n      eq\n        /* \"#utility.yul\":11226:11310   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11282:11300   */\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11226:11310   */\n    tag_274:\n        /* \"#utility.yul\":11047:11316   */\n      pop\n        /* \"#utility.yul\":10996:11316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11322:11502   */\n    tag_258:\n        /* \"#utility.yul\":11370:11447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11367:11368   */\n      0x00\n        /* \"#utility.yul\":11360:11448   */\n      mstore\n        /* \"#utility.yul\":11467:11471   */\n      0x11\n        /* \"#utility.yul\":11464:11465   */\n      0x04\n        /* \"#utility.yul\":11457:11472   */\n      mstore\n        /* \"#utility.yul\":11491:11495   */\n      0x24\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11481:11496   */\n      revert\n        /* \"#utility.yul\":11508:11688   */\n    tag_276:\n        /* \"#utility.yul\":11556:11633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11553:11554   */\n      0x00\n        /* \"#utility.yul\":11546:11634   */\n      mstore\n        /* \"#utility.yul\":11653:11657   */\n      0x22\n        /* \"#utility.yul\":11650:11651   */\n      0x04\n        /* \"#utility.yul\":11643:11658   */\n      mstore\n        /* \"#utility.yul\":11677:11681   */\n      0x24\n        /* \"#utility.yul\":11674:11675   */\n      0x00\n        /* \"#utility.yul\":11667:11682   */\n      revert\n        /* \"#utility.yul\":11817:11934   */\n    tag_152:\n        /* \"#utility.yul\":11926:11927   */\n      0x00\n        /* \"#utility.yul\":11923:11924   */\n      dup1\n        /* \"#utility.yul\":11916:11928   */\n      revert\n        /* \"#utility.yul\":11940:12042   */\n    tag_183:\n        /* \"#utility.yul\":11981:11987   */\n      0x00\n        /* \"#utility.yul\":12032:12034   */\n      0x1f\n        /* \"#utility.yul\":12028:12035   */\n      not\n        /* \"#utility.yul\":12023:12025   */\n      0x1f\n        /* \"#utility.yul\":12016:12021   */\n      dup4\n        /* \"#utility.yul\":12012:12026   */\n      add\n        /* \"#utility.yul\":12008:12036   */\n      and\n        /* \"#utility.yul\":11998:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11940:12042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12048:12270   */\n    tag_188:\n        /* \"#utility.yul\":12188:12222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12184:12185   */\n      0x00\n        /* \"#utility.yul\":12176:12182   */\n      dup3\n        /* \"#utility.yul\":12172:12186   */\n      add\n        /* \"#utility.yul\":12165:12223   */\n      mstore\n        /* \"#utility.yul\":12257:12262   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"#utility.yul\":12244:12250   */\n      dup3\n        /* \"#utility.yul\":12240:12255   */\n      add\n        /* \"#utility.yul\":12233:12263   */\n      mstore\n        /* \"#utility.yul\":12048:12270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12276:12497   */\n    tag_193:\n        /* \"#utility.yul\":12416:12450   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12412:12413   */\n      0x00\n        /* \"#utility.yul\":12404:12410   */\n      dup3\n        /* \"#utility.yul\":12400:12414   */\n      add\n        /* \"#utility.yul\":12393:12451   */\n      mstore\n        /* \"#utility.yul\":12485:12489   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12480:12482   */\n      0x20\n        /* \"#utility.yul\":12472:12478   */\n      dup3\n        /* \"#utility.yul\":12468:12483   */\n      add\n        /* \"#utility.yul\":12461:12490   */\n      mstore\n        /* \"#utility.yul\":12276:12497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12503:12682   */\n    tag_198:\n        /* \"#utility.yul\":12643:12674   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":12639:12640   */\n      0x00\n        /* \"#utility.yul\":12631:12637   */\n      dup3\n        /* \"#utility.yul\":12627:12641   */\n      add\n        /* \"#utility.yul\":12620:12675   */\n      mstore\n        /* \"#utility.yul\":12503:12682   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12688:12913   */\n    tag_203:\n        /* \"#utility.yul\":12828:12862   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12824:12825   */\n      0x00\n        /* \"#utility.yul\":12816:12822   */\n      dup3\n        /* \"#utility.yul\":12812:12826   */\n      add\n        /* \"#utility.yul\":12805:12863   */\n      mstore\n        /* \"#utility.yul\":12897:12905   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12892:12894   */\n      0x20\n        /* \"#utility.yul\":12884:12890   */\n      dup3\n        /* \"#utility.yul\":12880:12895   */\n      add\n        /* \"#utility.yul\":12873:12906   */\n      mstore\n        /* \"#utility.yul\":12688:12913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12919:13143   */\n    tag_208:\n        /* \"#utility.yul\":13059:13093   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13055:13056   */\n      0x00\n        /* \"#utility.yul\":13047:13053   */\n      dup3\n        /* \"#utility.yul\":13043:13057   */\n      add\n        /* \"#utility.yul\":13036:13094   */\n      mstore\n        /* \"#utility.yul\":13128:13135   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"#utility.yul\":13115:13121   */\n      dup3\n        /* \"#utility.yul\":13111:13126   */\n      add\n        /* \"#utility.yul\":13104:13136   */\n      mstore\n        /* \"#utility.yul\":12919:13143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13149:13372   */\n    tag_213:\n        /* \"#utility.yul\":13289:13323   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13285:13286   */\n      0x00\n        /* \"#utility.yul\":13277:13283   */\n      dup3\n        /* \"#utility.yul\":13273:13287   */\n      add\n        /* \"#utility.yul\":13266:13324   */\n      mstore\n        /* \"#utility.yul\":13358:13364   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13353:13355   */\n      0x20\n        /* \"#utility.yul\":13345:13351   */\n      dup3\n        /* \"#utility.yul\":13341:13356   */\n      add\n        /* \"#utility.yul\":13334:13365   */\n      mstore\n        /* \"#utility.yul\":13149:13372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13378:13602   */\n    tag_218:\n        /* \"#utility.yul\":13518:13552   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":13514:13515   */\n      0x00\n        /* \"#utility.yul\":13506:13512   */\n      dup3\n        /* \"#utility.yul\":13502:13516   */\n      add\n        /* \"#utility.yul\":13495:13553   */\n      mstore\n        /* \"#utility.yul\":13587:13594   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13582:13584   */\n      0x20\n        /* \"#utility.yul\":13574:13580   */\n      dup3\n        /* \"#utility.yul\":13570:13585   */\n      add\n        /* \"#utility.yul\":13563:13595   */\n      mstore\n        /* \"#utility.yul\":13378:13602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13608:13730   */\n    tag_144:\n        /* \"#utility.yul\":13681:13705   */\n      tag_291\n        /* \"#utility.yul\":13699:13704   */\n      dup2\n        /* \"#utility.yul\":13681:13705   */\n      tag_259\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13674:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13706   */\n      eq\n        /* \"#utility.yul\":13661:13724   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13720:13721   */\n      0x00\n        /* \"#utility.yul\":13717:13718   */\n      dup1\n        /* \"#utility.yul\":13710:13722   */\n      revert\n        /* \"#utility.yul\":13661:13724   */\n    tag_292:\n        /* \"#utility.yul\":13608:13730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13736:13858   */\n    tag_148:\n        /* \"#utility.yul\":13809:13833   */\n      tag_294\n        /* \"#utility.yul\":13827:13832   */\n      dup2\n        /* \"#utility.yul\":13809:13833   */\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13802:13807   */\n      dup2\n        /* \"#utility.yul\":13799:13834   */\n      eq\n        /* \"#utility.yul\":13789:13852   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":13848:13849   */\n      0x00\n        /* \"#utility.yul\":13845:13846   */\n      dup1\n        /* \"#utility.yul\":13838:13850   */\n      revert\n        /* \"#utility.yul\":13789:13852   */\n    tag_295:\n        /* \"#utility.yul\":13736:13858   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c70e1992046ff573bf7e5981f8f62872dc98f375e08ea9d8a16f2a8da731c7ec64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:7"
															},
															"nodeType": "YulIf",
															"src": "262:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:7",
														"type": ""
													}
												],
												"src": "7:421:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:7"
															},
															"nodeType": "YulIf",
															"src": "531:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:7",
														"type": ""
													}
												],
												"src": "448:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:7"
															},
															"nodeType": "YulIf",
															"src": "933:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:7",
														"type": ""
													}
												],
												"src": "809:853:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:7",
														"type": ""
													}
												],
												"src": "1668:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:7",
														"type": ""
													}
												],
												"src": "1803:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:7"
															},
															"nodeType": "YulIf",
															"src": "2022:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:7",
														"type": ""
													}
												],
												"src": "1884:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:7",
																"statements": []
															},
															"src": "2276:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:7"
															},
															"nodeType": "YulIf",
															"src": "2398:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:7",
														"type": ""
													}
												],
												"src": "2198:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:7"
															},
															"nodeType": "YulIf",
															"src": "2650:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:7"
															},
															"nodeType": "YulIf",
															"src": "2741:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:7",
														"type": ""
													}
												],
												"src": "2511:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:7"
															},
															"nodeType": "YulIf",
															"src": "2993:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:7",
														"type": ""
													}
												],
												"src": "2837:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													}
												],
												"src": "3988:102:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016173803806200161783398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220c70e1992046ff573bf7e5981f8f62872dc98f375e08ea9d8a16f2a8da731c7ec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE NOT SWAP3 DIV PUSH16 0xF573BF7E5981F8F62872DC98F375E08E 0xA9 0xD8 LOG1 PUSH16 0x2A8DA731C7EC64736F6C634300080700 CALLER ",
							"sourceMap": "1401:11610:1:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:7:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1401:11610:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": 2683,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 1447,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": 2678,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_858": {
									"entryPoint": 1439,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 1906,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 2046,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 1304,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 776,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": 932,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_187": {
									"entryPoint": 868,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 1150,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 877,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_167": {
									"entryPoint": 630,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_177": {
									"entryPoint": 1004,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": 811,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 821,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_236": {
									"entryPoint": 1269,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13861:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "7:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:7",
														"type": ""
													}
												],
												"src": "152:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:7"
															},
															"nodeType": "YulIf",
															"src": "373:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:7",
														"type": ""
													}
												],
												"src": "297:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:7"
															},
															"nodeType": "YulIf",
															"src": "725:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:7",
														"type": ""
													}
												],
												"src": "632:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:7"
															},
															"nodeType": "YulIf",
															"src": "1222:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:7",
														"type": ""
													}
												],
												"src": "1112:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:7"
															},
															"nodeType": "YulIf",
															"src": "1830:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:7",
														"type": ""
													}
												],
												"src": "1737:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:7",
														"type": ""
													}
												],
												"src": "2217:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:7",
														"type": ""
													}
												],
												"src": "2332:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:7",
														"type": ""
													}
												],
												"src": "2702:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:7",
														"type": ""
													}
												],
												"src": "3074:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:7",
														"type": ""
													}
												],
												"src": "3446:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:7",
														"type": ""
													}
												],
												"src": "3818:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:7",
														"type": ""
													}
												],
												"src": "4190:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:7",
														"type": ""
													}
												],
												"src": "4562:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:7",
														"type": ""
													}
												],
												"src": "4934:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5388:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5393:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5366:3:7",
														"type": ""
													}
												],
												"src": "5306:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5479:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5486:3:7",
														"type": ""
													}
												],
												"src": "5430:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5650:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5612:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5624:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5635:4:7",
														"type": ""
													}
												],
												"src": "5548:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5958:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6065:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:7",
														"type": ""
													}
												],
												"src": "5764:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6234:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:7",
														"type": ""
													}
												],
												"src": "6083:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6915:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6789:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6674:4:7",
														"type": ""
													}
												],
												"src": "6508:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7084:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7099:4:7",
														"type": ""
													}
												],
												"src": "6933:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7539:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7539:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7605:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7611:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7765:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7509:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7524:4:7",
														"type": ""
													}
												],
												"src": "7358:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8030:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8056:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8190:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7934:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7949:4:7",
														"type": ""
													}
												],
												"src": "7783:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8379:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8389:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8401:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8389:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8455:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8615:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8489:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8374:4:7",
														"type": ""
													}
												],
												"src": "8208:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8826:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8880:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8914:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:7",
														"type": ""
													}
												],
												"src": "8633:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9156:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9166:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9140:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9151:4:7",
														"type": ""
													}
												],
												"src": "9058:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:120:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:39:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:67:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9352:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:7",
														"type": ""
													}
												],
												"src": "9286:214:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9556:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:7",
														"type": ""
													}
												],
												"src": "9506:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9646:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9657:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9667:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9639:6:7",
														"type": ""
													}
												],
												"src": "9587:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9810:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9826:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9826:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9760:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9765:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9776:11:7",
														"type": ""
													}
												],
												"src": "9692:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9921:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9926:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9921:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9955:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9960:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9955:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10118:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10120:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10120:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10039:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10114:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10036:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:81:7"
															},
															"nodeType": "YulIf",
															"src": "10033:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9898:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9901:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9907:3:7",
														"type": ""
													}
												],
												"src": "9867:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10262:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10244:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10233:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10205:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10215:7:7",
														"type": ""
													}
												],
												"src": "10178:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10322:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10332:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10357:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10350:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10332:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10304:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10314:7:7",
														"type": ""
													}
												],
												"src": "10280:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10431:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10446:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10453:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10431:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10403:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10413:7:7",
														"type": ""
													}
												],
												"src": "10376:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10553:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10563:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10574:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10563:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10535:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10545:7:7",
														"type": ""
													}
												],
												"src": "10508:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10644:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10659:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10666:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10644:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10616:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10626:7:7",
														"type": ""
													}
												],
												"src": "10591:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10732:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10742:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10751:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10746:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10811:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10836:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10841:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10832:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10832:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10855:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10860:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10851:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10851:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10845:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10845:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10825:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10825:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10825:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10772:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10775:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10769:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10783:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10785:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10794:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10797:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10790:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10790:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10785:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10765:3:7",
																"statements": []
															},
															"src": "10761:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10908:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10958:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10963:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10954:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10954:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10972:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10947:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10947:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10889:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10892:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10886:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:13:7"
															},
															"nodeType": "YulIf",
															"src": "10883:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10714:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10719:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10724:6:7",
														"type": ""
													}
												],
												"src": "10683:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:269:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11057:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11071:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11077:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11067:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11088:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11118:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11124:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11114:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11114:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11092:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11165:51:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11179:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11193:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11201:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11189:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11189:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11145:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:26:7"
															},
															"nodeType": "YulIf",
															"src": "11135:81:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11268:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11282:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11282:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11282:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11232:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11255:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11263:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11252:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11252:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11229:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:38:7"
															},
															"nodeType": "YulIf",
															"src": "11226:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11031:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11040:6:7",
														"type": ""
													}
												],
												"src": "10996:320:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11350:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11367:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11370:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11360:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11360:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11467:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11457:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11457:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11491:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11481:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11322:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11556:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11650:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11643:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11643:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11674:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11677:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11508:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11783:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11800:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11803:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11694:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11906:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11923:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11926:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11817:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11988:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11998:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12016:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12032:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12028:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12028:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12008:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12008:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11998:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11971:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11981:6:7",
														"type": ""
													}
												],
												"src": "11940:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12154:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12176:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12184:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12172:14:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12188:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12165:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12165:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12244:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12240:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12240:15:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12257:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12146:6:7",
														"type": ""
													}
												],
												"src": "12048:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12382:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12404:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12412:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:14:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12416:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12472:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12480:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12468:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12468:15:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12485:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12461:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12461:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12461:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12374:6:7",
														"type": ""
													}
												],
												"src": "12276:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12609:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12631:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12639:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12627:14:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12643:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12620:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12620:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12620:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12601:6:7",
														"type": ""
													}
												],
												"src": "12503:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12794:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12816:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12824:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:14:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12828:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12805:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12884:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12892:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12880:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12880:15:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12897:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12873:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12873:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12873:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12786:6:7",
														"type": ""
													}
												],
												"src": "12688:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13025:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13047:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13055:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13043:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13043:14:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13059:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13036:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13036:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13115:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13123:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:15:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13128:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13104:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13104:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13104:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13017:6:7",
														"type": ""
													}
												],
												"src": "12919:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13255:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13277:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13285:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13273:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13273:14:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13289:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13266:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13345:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13353:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13341:15:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13358:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13334:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13247:6:7",
														"type": ""
													}
												],
												"src": "13149:223:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13484:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13506:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13514:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13502:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13502:14:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13518:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13495:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13495:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13495:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13574:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13582:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13570:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13570:15:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13587:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13563:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13563:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13563:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13476:6:7",
														"type": ""
													}
												],
												"src": "13378:224:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13651:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13708:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13717:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13720:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13710:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13710:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13710:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13674:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13699:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13681:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13681:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13671:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:43:7"
															},
															"nodeType": "YulIf",
															"src": "13661:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13644:5:7",
														"type": ""
													}
												],
												"src": "13608:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13779:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13836:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13845:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13848:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13838:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13838:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13838:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13802:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13827:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13809:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13809:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13799:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13799:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13792:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13792:43:7"
															},
															"nodeType": "YulIf",
															"src": "13789:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13772:5:7",
														"type": ""
													}
												],
												"src": "13736:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220c70e1992046ff573bf7e5981f8f62872dc98f375e08ea9d8a16f2a8da731c7ec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xE NOT SWAP3 DIV PUSH16 0xF573BF7E5981F8F62872DC98F375E08E 0xA9 0xD8 LOG1 PUSH16 0x2A8DA731C7EC64736F6C634300080700 CALLER ",
							"sourceMap": "1401:11610:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;10504:370:1:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:139:7:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10178:96;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10280:90;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10376:126;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10508:77;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10591:86;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:101;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:101;10732:258;10683:307;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:81;;11201:4;11193:6;11189:17;11179:27;;11135:81;11263:2;11255:6;11252:14;11232:18;11229:38;11226:84;;;11282:18;;:::i;:::-;11226:84;11047:269;10996:320;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11940:102;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12048:222;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12276:221;:::o;12503:179::-;12643:31;12639:1;12631:6;12627:14;12620:55;12503:179;:::o;12688:225::-;12828:34;12824:1;12816:6;12812:14;12805:58;12897:8;12892:2;12884:6;12880:15;12873:33;12688:225;:::o;12919:224::-;13059:34;13055:1;13047:6;13043:14;13036:58;13128:7;13123:2;13115:6;13111:15;13104:32;12919:224;:::o;13149:223::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:6;13353:2;13345:6;13341:15;13334:31;13149:223;:::o;13378:224::-;13518:34;13514:1;13506:6;13502:14;13495:58;13587:7;13582:2;13574:6;13570:15;13563:32;13378:224;:::o;13608:122::-;13681:24;13699:5;13681:24;:::i;:::-;13674:5;13671:35;13661:63;;13720:1;13717;13710:12;13661:63;13608:122;:::o;13736:::-;13809:24;13827:5;13809:24;:::i;:::-;13802:5;13799:35;13789:63;;13848:1;13845;13838:12;13789:63;13736:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "940600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c70e1992046ff573bf7e5981f8f62872dc98f375e08ea9d8a16f2a8da731c7ec64736f6c63430008070033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4546,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5351,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5991,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 6003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6022,
											"end": 6027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6717,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6776,
											"end": 6781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10796,
											"end": 10801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10851,
											"end": 10858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7744,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7978,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8229,
											"end": 8235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12889,
											"end": 13009,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5381,
											"end": 5418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5928,
											"end": 5975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8000,
											"end": 8047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8432,
											"end": 8449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8425,
											"end": 8472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9475,
											"end": 9492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9850,
											"end": 9854,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10046,
											"end": 10112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10116,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10036,
											"end": 10117,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 10262,
											"end": 10267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10314,
											"end": 10321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10350,
											"end": 10363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10343,
											"end": 10364,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10495,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10446,
											"end": 10451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10442,
											"end": 10496,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10579,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10670,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10781,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10769,
											"end": 10782,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10851,
											"end": 10862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10845,
											"end": 10863,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10839,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 10800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10892,
											"end": 10898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10886,
											"end": 10899,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 10973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10969,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11071,
											"end": 11075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11067,
											"end": 11079,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11114,
											"end": 11126,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11193,
											"end": 11199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11266,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11232,
											"end": 11250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11229,
											"end": 11267,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11047,
											"end": 11316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11447,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11367,
											"end": 11368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11467,
											"end": 11471,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11457,
											"end": 11472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11491,
											"end": 11495,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11481,
											"end": 11496,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11556,
											"end": 11633,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11643,
											"end": 11658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11681,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12028,
											"end": 12035,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 12016,
											"end": 12021,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12026,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12008,
											"end": 12036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12188,
											"end": 12222,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12184,
											"end": 12185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "PUSH",
											"source": 7,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12233,
											"end": 12263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12416,
											"end": 12450,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12400,
											"end": 12414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 7,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12480,
											"end": 12482,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12461,
											"end": 12490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12643,
											"end": 12674,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12631,
											"end": 12637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12627,
											"end": 12641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12828,
											"end": 12862,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12824,
											"end": 12825,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12805,
											"end": 12863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12897,
											"end": 12905,
											"name": "PUSH",
											"source": 7,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12892,
											"end": 12894,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12884,
											"end": 12890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12880,
											"end": 12895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12873,
											"end": 12906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13059,
											"end": 13093,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13055,
											"end": 13056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13043,
											"end": 13057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13128,
											"end": 13135,
											"name": "PUSH",
											"source": 7,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13111,
											"end": 13126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 13323,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13273,
											"end": 13287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13266,
											"end": 13324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13358,
											"end": 13364,
											"name": "PUSH",
											"source": 7,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13353,
											"end": 13355,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13345,
											"end": 13351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13334,
											"end": 13365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13518,
											"end": 13552,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 13514,
											"end": 13515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13495,
											"end": 13553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13587,
											"end": 13594,
											"name": "PUSH",
											"source": 7,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13582,
											"end": 13584,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13570,
											"end": 13585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13563,
											"end": 13595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13699,
											"end": 13704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13674,
											"end": 13679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13720,
											"end": 13721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13717,
											"end": 13718,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 13827,
											"end": 13832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13802,
											"end": 13807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13799,
											"end": 13834,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13848,
											"end": 13849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13846,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13838,
											"end": 13850,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol": {
				"basicToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "halfing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":250:2130  contract basicToken {... */\n  mstore(0x40, 0x80)\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":647:749  constructor(uint _totalSupply) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":702:714  _totalSupply */\n  dup1\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":688:699  totalSupply */\n  0x01\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":688:714  totalSupply = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":732:742  msg.sender */\n  caller\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":724:729  owner */\n  0x00\n  dup1\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":724:742  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":647:749  constructor(uint _totalSupply) {... */\n  pop\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":250:2130  contract basicToken {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":250:2130  contract basicToken {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":250:2130  contract basicToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x771282f6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x771282f6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa92429fc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x47b5dd54\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":393:444  string public constant name = \"Patrick Basic Token\" */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":303:326  uint public totalSupply */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":528:568  mapping(address => uint) public balances */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":860:1143  function mint(address to, uint amount) public onlyOwner {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":363:387  uint public burnedTokens */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":332:357  uint public currentSupply */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":277:297  address public owner */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":450:488  string public constant symbol = \"PBST\" */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1149:1548  function transfer(address to, uint amount) public {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1841:2128  function halfing() public {... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1554:1658  function remainingSupply() public view returns(uint) {... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":393:444  string public constant name = \"Patrick Basic Token\" */\n    tag_16:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      0x5061747269636b20426173696320546f6b656e00000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":303:326  uint public totalSupply */\n    tag_20:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":528:568  mapping(address => uint) public balances */\n    tag_26:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":860:1143  function mint(address to, uint amount) public onlyOwner {... */\n    tag_31:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":806:811  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":792:811  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":792:802  msg.sender */\n      caller\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":792:811  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":784:836  require(msg.sender == owner, \"You're not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":949:962  currentSupply */\n      sload(0x02)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":934:945  totalSupply */\n      sload(0x01)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":934:962  totalSupply >= currentSupply */\n      lt\n      iszero\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":926:992  require(totalSupply >= currentSupply, \"All tokens already minted\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1024:1025  0 */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1010:1026  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1010:1012  to */\n      dup3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1010:1026  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1002:1062  require(to != address(0), \"ERC20: mint to the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1097:1103  amount */\n      dup1\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1081:1089  balances */\n      0x04\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1081:1093  balances[to] */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1090:1092  to */\n      dup5\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1081:1093  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1081:1103  balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1130:1136  amount */\n      dup1\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1113:1126  currentSupply */\n      0x02\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1113:1136  currentSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_66\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":860:1143  function mint(address to, uint amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":363:387  uint public burnedTokens */\n    tag_33:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":332:357  uint public currentSupply */\n    tag_36:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":277:297  address public owner */\n    tag_39:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":450:488  string public constant symbol = \"PBST\" */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x5042535400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1149:1548  function transfer(address to, uint amount) public {... */\n    tag_47:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1227:1235  balances */\n      0x04\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1227:1247  balances[msg.sender] */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1236:1246  msg.sender */\n      caller\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1227:1247  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1217:1223  amount */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1217:1247  amount <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1209:1269  require(amount <= balances[msg.sender], \"Not enough tokens\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1301:1302  0 */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1287:1303  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1287:1289  to */\n      dup3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1287:1303  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1279:1335  require(to != address(0), \"No mint to the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1363:1376  currentSupply */\n      sload(0x02)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1353:1359  amount */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1353:1376  amount <= currentSupply */\n      gt\n      iszero\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1345:1377  require(amount <= currentSupply) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1420:1426  amount */\n      dup1\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1396:1404  balances */\n      0x04\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1396:1416  balances[msg.sender] */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1405:1415  msg.sender */\n      caller\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1396:1416  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1396:1426  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1452:1458  amount */\n      dup1\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1436:1444  balances */\n      0x04\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1436:1448  balances[to] */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1445:1447  to */\n      dup5\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1436:1448  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1436:1458  balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_77\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_77:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1477:1489  burn(amount) */\n      tag_78\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1482:1488  amount */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1477:1481  burn */\n      tag_79\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1477:1489  burn(amount) */\n      jump\t// in\n    tag_78:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1530:1532  to */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1513:1541  Sent(msg.sender, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1518:1528  msg.sender */\n      caller\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1513:1541  Sent(msg.sender, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd3345\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1534:1540  amount */\n      dup4\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1513:1541  Sent(msg.sender, to, amount) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1149:1548  function transfer(address to, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1841:2128  function halfing() public {... */\n    tag_49:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1877:1891  uint startTime */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1894:1909  block.timestamp */\n      timestamp\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1877:1909  uint startTime = block.timestamp */\n      swap1\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1919:1931  uint endTime */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1939:1948  startTime */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1934:1936  60 */\n      0x3c\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1934:1948  60 + startTime */\n      tag_82\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_82:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1919:1948  uint endTime = 60 + startTime */\n      swap1\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1973:1974  0 */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1962:1969  endTime */\n      dup2\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1962:1974  endTime <= 0 */\n      gt\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1959:2122  if(endTime <= 0) {... */\n      tag_83\n      jumpi\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2018:2019  2 */\n      0x02\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2004:2015  totalSupply */\n      sload(0x01)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2004:2019  totalSupply / 2 */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1990:2001  totalSupply */\n      0x01\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1990:2019  totalSupply = totalSupply / 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2065:2066  2 */\n      0x02\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2049:2062  currentSupply */\n      dup1\n      sload\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2049:2066  currentSupply / 2 */\n      tag_86\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2033:2046  currentSupply */\n      0x02\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2033:2066  currentSupply = currentSupply / 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2110:2111  2 */\n      0x02\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2095:2107  burnedTokens */\n      sload(0x03)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2095:2111  burnedTokens / 2 */\n      tag_87\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_87:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2080:2092  burnedTokens */\n      0x03\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":2080:2111  burnedTokens = burnedTokens / 2 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1959:2122  if(endTime <= 0) {... */\n    tag_83:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1867:2128  {... */\n      pop\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1841:2128  function halfing() public {... */\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1554:1658  function remainingSupply() public view returns(uint) {... */\n    tag_51:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1601:1605  uint */\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1638:1651  currentSupply */\n      sload(0x02)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1624:1635  totalSupply */\n      sload(0x01)\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1624:1651  totalSupply - currentSupply */\n      tag_89\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_89:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1617:1651  return totalSupply - currentSupply */\n      swap1\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1554:1658  function remainingSupply() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1664:1835  function burn(uint amount) private {... */\n    tag_79:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1740:1741  1 */\n      0x01\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1733:1737  1000 */\n      0x03e8\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1724:1730  amount */\n      dup3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1724:1737  amount / 1000 */\n      tag_91\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_91:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1724:1741  amount / 1000 * 1 */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1709:1720  totalSupply */\n      0x01\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1709:1741  totalSupply -= amount / 1000 * 1 */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1784:1785  1 */\n      0x01\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1777:1781  1000 */\n      0x03e8\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1768:1774  amount */\n      dup3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1768:1781  amount / 1000 */\n      tag_95\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_95:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1768:1785  amount / 1000 * 1 */\n      tag_96\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_96:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1751:1764  currentSupply */\n      0x02\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1751:1785  currentSupply -= amount / 1000 * 1 */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1827:1828  1 */\n      0x01\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1820:1824  1000 */\n      0x03e8\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1811:1817  amount */\n      dup3\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1811:1824  amount / 1000 */\n      tag_98\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_98:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1811:1828  amount / 1000 * 1 */\n      tag_99\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_99:\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1795:1807  burnedTokens */\n      0x03\n      0x00\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1795:1828  burnedTokens += amount / 1000 * 1 */\n      dup3\n      dup3\n      sload\n      tag_100\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_100:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":1664:1835  function burn(uint amount) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_102:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_104\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_106:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_108\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_25:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":373:492   */\n    tag_111:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_114\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_102\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_30:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_117\n      tag_113\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":725:844   */\n    tag_116:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_118\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_102\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_119\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_106\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1230   */\n    tag_120:\n        /* \"#utility.yul\":1199:1223   */\n      tag_122\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1199:1223   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1224   */\n      mstore\n        /* \"#utility.yul\":1112:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1600   */\n    tag_124:\n        /* \"#utility.yul\":1324:1327   */\n      0x00\n        /* \"#utility.yul\":1352:1391   */\n      tag_126\n        /* \"#utility.yul\":1385:1390   */\n      dup3\n        /* \"#utility.yul\":1352:1391   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1407:1478   */\n      tag_128\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1466:1469   */\n      dup6\n        /* \"#utility.yul\":1407:1478   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1400:1478   */\n      swap4\n      pop\n        /* \"#utility.yul\":1487:1539   */\n      tag_130\n        /* \"#utility.yul\":1532:1538   */\n      dup2\n        /* \"#utility.yul\":1527:1530   */\n      dup6\n        /* \"#utility.yul\":1520:1524   */\n      0x20\n        /* \"#utility.yul\":1513:1518   */\n      dup7\n        /* \"#utility.yul\":1509:1525   */\n      add\n        /* \"#utility.yul\":1487:1539   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1564:1593   */\n      tag_132\n        /* \"#utility.yul\":1586:1592   */\n      dup2\n        /* \"#utility.yul\":1564:1593   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1559:1562   */\n      dup5\n        /* \"#utility.yul\":1555:1594   */\n      add\n        /* \"#utility.yul\":1548:1594   */\n      swap2\n      pop\n        /* \"#utility.yul\":1328:1600   */\n      pop\n        /* \"#utility.yul\":1236:1600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1606:1972   */\n    tag_134:\n        /* \"#utility.yul\":1748:1751   */\n      0x00\n        /* \"#utility.yul\":1769:1836   */\n      tag_136\n        /* \"#utility.yul\":1833:1835   */\n      0x1b\n        /* \"#utility.yul\":1828:1831   */\n      dup4\n        /* \"#utility.yul\":1769:1836   */\n      tag_129\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1762:1836   */\n      swap2\n      pop\n        /* \"#utility.yul\":1845:1938   */\n      tag_137\n        /* \"#utility.yul\":1934:1937   */\n      dup3\n        /* \"#utility.yul\":1845:1938   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1963:1965   */\n      0x20\n        /* \"#utility.yul\":1958:1961   */\n      dup3\n        /* \"#utility.yul\":1954:1966   */\n      add\n        /* \"#utility.yul\":1947:1966   */\n      swap1\n      pop\n        /* \"#utility.yul\":1606:1972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1978:2344   */\n    tag_139:\n        /* \"#utility.yul\":2120:2123   */\n      0x00\n        /* \"#utility.yul\":2141:2208   */\n      tag_141\n        /* \"#utility.yul\":2205:2207   */\n      0x19\n        /* \"#utility.yul\":2200:2203   */\n      dup4\n        /* \"#utility.yul\":2141:2208   */\n      tag_129\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2134:2208   */\n      swap2\n      pop\n        /* \"#utility.yul\":2217:2310   */\n      tag_142\n        /* \"#utility.yul\":2306:2309   */\n      dup3\n        /* \"#utility.yul\":2217:2310   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2335:2337   */\n      0x20\n        /* \"#utility.yul\":2330:2333   */\n      dup3\n        /* \"#utility.yul\":2326:2338   */\n      add\n        /* \"#utility.yul\":2319:2338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1978:2344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2350:2716   */\n    tag_144:\n        /* \"#utility.yul\":2492:2495   */\n      0x00\n        /* \"#utility.yul\":2513:2580   */\n      tag_146\n        /* \"#utility.yul\":2577:2579   */\n      0x14\n        /* \"#utility.yul\":2572:2575   */\n      dup4\n        /* \"#utility.yul\":2513:2580   */\n      tag_129\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2506:2580   */\n      swap2\n      pop\n        /* \"#utility.yul\":2589:2682   */\n      tag_147\n        /* \"#utility.yul\":2678:2681   */\n      dup3\n        /* \"#utility.yul\":2589:2682   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2707:2709   */\n      0x20\n        /* \"#utility.yul\":2702:2705   */\n      dup3\n        /* \"#utility.yul\":2698:2710   */\n      add\n        /* \"#utility.yul\":2691:2710   */\n      swap1\n      pop\n        /* \"#utility.yul\":2350:2716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2722:3088   */\n    tag_149:\n        /* \"#utility.yul\":2864:2867   */\n      0x00\n        /* \"#utility.yul\":2885:2952   */\n      tag_151\n        /* \"#utility.yul\":2949:2951   */\n      0x11\n        /* \"#utility.yul\":2944:2947   */\n      dup4\n        /* \"#utility.yul\":2885:2952   */\n      tag_129\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2878:2952   */\n      swap2\n      pop\n        /* \"#utility.yul\":2961:3054   */\n      tag_152\n        /* \"#utility.yul\":3050:3053   */\n      dup3\n        /* \"#utility.yul\":2961:3054   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3079:3081   */\n      0x20\n        /* \"#utility.yul\":3074:3077   */\n      dup3\n        /* \"#utility.yul\":3070:3082   */\n      add\n        /* \"#utility.yul\":3063:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2722:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3460   */\n    tag_154:\n        /* \"#utility.yul\":3236:3239   */\n      0x00\n        /* \"#utility.yul\":3257:3324   */\n      tag_156\n        /* \"#utility.yul\":3321:3323   */\n      0x1f\n        /* \"#utility.yul\":3316:3319   */\n      dup4\n        /* \"#utility.yul\":3257:3324   */\n      tag_129\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3250:3324   */\n      swap2\n      pop\n        /* \"#utility.yul\":3333:3426   */\n      tag_157\n        /* \"#utility.yul\":3422:3425   */\n      dup3\n        /* \"#utility.yul\":3333:3426   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3451:3453   */\n      0x20\n        /* \"#utility.yul\":3446:3449   */\n      dup3\n        /* \"#utility.yul\":3442:3454   */\n      add\n        /* \"#utility.yul\":3435:3454   */\n      swap1\n      pop\n        /* \"#utility.yul\":3094:3460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3466:3584   */\n    tag_159:\n        /* \"#utility.yul\":3553:3577   */\n      tag_161\n        /* \"#utility.yul\":3571:3576   */\n      dup2\n        /* \"#utility.yul\":3553:3577   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3548:3551   */\n      dup3\n        /* \"#utility.yul\":3541:3578   */\n      mstore\n        /* \"#utility.yul\":3466:3584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3590:3812   */\n    tag_41:\n        /* \"#utility.yul\":3683:3687   */\n      0x00\n        /* \"#utility.yul\":3721:3723   */\n      0x20\n        /* \"#utility.yul\":3710:3719   */\n      dup3\n        /* \"#utility.yul\":3706:3724   */\n      add\n        /* \"#utility.yul\":3698:3724   */\n      swap1\n      pop\n        /* \"#utility.yul\":3734:3805   */\n      tag_164\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3791:3800   */\n      dup4\n        /* \"#utility.yul\":3787:3804   */\n      add\n        /* \"#utility.yul\":3778:3784   */\n      dup5\n        /* \"#utility.yul\":3734:3805   */\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3590:3812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4131   */\n    tag_18:\n        /* \"#utility.yul\":3931:3935   */\n      0x00\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"#utility.yul\":3958:3967   */\n      dup3\n        /* \"#utility.yul\":3954:3972   */\n      add\n        /* \"#utility.yul\":3946:3972   */\n      swap1\n      pop\n        /* \"#utility.yul\":4018:4027   */\n      dup2\n        /* \"#utility.yul\":4012:4016   */\n      dup2\n        /* \"#utility.yul\":4008:4028   */\n      sub\n        /* \"#utility.yul\":4004:4005   */\n      0x00\n        /* \"#utility.yul\":3993:4002   */\n      dup4\n        /* \"#utility.yul\":3989:4006   */\n      add\n        /* \"#utility.yul\":3982:4029   */\n      mstore\n        /* \"#utility.yul\":4046:4124   */\n      tag_166\n        /* \"#utility.yul\":4119:4123   */\n      dup2\n        /* \"#utility.yul\":4110:4116   */\n      dup5\n        /* \"#utility.yul\":4046:4124   */\n      tag_124\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4038:4124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4556   */\n    tag_73:\n        /* \"#utility.yul\":4303:4307   */\n      0x00\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup3\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4318:4344   */\n      swap1\n      pop\n        /* \"#utility.yul\":4390:4399   */\n      dup2\n        /* \"#utility.yul\":4384:4388   */\n      dup2\n        /* \"#utility.yul\":4380:4400   */\n      sub\n        /* \"#utility.yul\":4376:4377   */\n      0x00\n        /* \"#utility.yul\":4365:4374   */\n      dup4\n        /* \"#utility.yul\":4361:4378   */\n      add\n        /* \"#utility.yul\":4354:4401   */\n      mstore\n        /* \"#utility.yul\":4418:4549   */\n      tag_168\n        /* \"#utility.yul\":4544:4548   */\n      dup2\n        /* \"#utility.yul\":4418:4549   */\n      tag_134\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4410:4549   */\n      swap1\n      pop\n        /* \"#utility.yul\":4137:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4981   */\n    tag_60:\n        /* \"#utility.yul\":4728:4732   */\n      0x00\n        /* \"#utility.yul\":4766:4768   */\n      0x20\n        /* \"#utility.yul\":4755:4764   */\n      dup3\n        /* \"#utility.yul\":4751:4769   */\n      add\n        /* \"#utility.yul\":4743:4769   */\n      swap1\n      pop\n        /* \"#utility.yul\":4815:4824   */\n      dup2\n        /* \"#utility.yul\":4809:4813   */\n      dup2\n        /* \"#utility.yul\":4805:4825   */\n      sub\n        /* \"#utility.yul\":4801:4802   */\n      0x00\n        /* \"#utility.yul\":4790:4799   */\n      dup4\n        /* \"#utility.yul\":4786:4803   */\n      add\n        /* \"#utility.yul\":4779:4826   */\n      mstore\n        /* \"#utility.yul\":4843:4974   */\n      tag_170\n        /* \"#utility.yul\":4969:4973   */\n      dup2\n        /* \"#utility.yul\":4843:4974   */\n      tag_139\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4835:4974   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4987:5406   */\n    tag_56:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5240:5249   */\n      dup2\n        /* \"#utility.yul\":5234:5238   */\n      dup2\n        /* \"#utility.yul\":5230:5250   */\n      sub\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5204:5251   */\n      mstore\n        /* \"#utility.yul\":5268:5399   */\n      tag_172\n        /* \"#utility.yul\":5394:5398   */\n      dup2\n        /* \"#utility.yul\":5268:5399   */\n      tag_144\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5260:5399   */\n      swap1\n      pop\n        /* \"#utility.yul\":4987:5406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5412:5831   */\n    tag_70:\n        /* \"#utility.yul\":5578:5582   */\n      0x00\n        /* \"#utility.yul\":5616:5618   */\n      0x20\n        /* \"#utility.yul\":5605:5614   */\n      dup3\n        /* \"#utility.yul\":5601:5619   */\n      add\n        /* \"#utility.yul\":5593:5619   */\n      swap1\n      pop\n        /* \"#utility.yul\":5665:5674   */\n      dup2\n        /* \"#utility.yul\":5659:5663   */\n      dup2\n        /* \"#utility.yul\":5655:5675   */\n      sub\n        /* \"#utility.yul\":5651:5652   */\n      0x00\n        /* \"#utility.yul\":5640:5649   */\n      dup4\n        /* \"#utility.yul\":5636:5653   */\n      add\n        /* \"#utility.yul\":5629:5676   */\n      mstore\n        /* \"#utility.yul\":5693:5824   */\n      tag_174\n        /* \"#utility.yul\":5819:5823   */\n      dup2\n        /* \"#utility.yul\":5693:5824   */\n      tag_149\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5685:5824   */\n      swap1\n      pop\n        /* \"#utility.yul\":5412:5831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5837:6256   */\n    tag_63:\n        /* \"#utility.yul\":6003:6007   */\n      0x00\n        /* \"#utility.yul\":6041:6043   */\n      0x20\n        /* \"#utility.yul\":6030:6039   */\n      dup3\n        /* \"#utility.yul\":6026:6044   */\n      add\n        /* \"#utility.yul\":6018:6044   */\n      swap1\n      pop\n        /* \"#utility.yul\":6090:6099   */\n      dup2\n        /* \"#utility.yul\":6084:6088   */\n      dup2\n        /* \"#utility.yul\":6080:6100   */\n      sub\n        /* \"#utility.yul\":6076:6077   */\n      0x00\n        /* \"#utility.yul\":6065:6074   */\n      dup4\n        /* \"#utility.yul\":6061:6078   */\n      add\n        /* \"#utility.yul\":6054:6101   */\n      mstore\n        /* \"#utility.yul\":6118:6249   */\n      tag_176\n        /* \"#utility.yul\":6244:6248   */\n      dup2\n        /* \"#utility.yul\":6118:6249   */\n      tag_154\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6110:6249   */\n      swap1\n      pop\n        /* \"#utility.yul\":5837:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6484   */\n    tag_22:\n        /* \"#utility.yul\":6355:6359   */\n      0x00\n        /* \"#utility.yul\":6393:6395   */\n      0x20\n        /* \"#utility.yul\":6382:6391   */\n      dup3\n        /* \"#utility.yul\":6378:6396   */\n      add\n        /* \"#utility.yul\":6370:6396   */\n      swap1\n      pop\n        /* \"#utility.yul\":6406:6477   */\n      tag_178\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6463:6472   */\n      dup4\n        /* \"#utility.yul\":6459:6476   */\n      add\n        /* \"#utility.yul\":6450:6456   */\n      dup5\n        /* \"#utility.yul\":6406:6477   */\n      tag_159\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6262:6484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6571:6670   */\n    tag_127:\n        /* \"#utility.yul\":6623:6629   */\n      0x00\n        /* \"#utility.yul\":6657:6662   */\n      dup2\n        /* \"#utility.yul\":6651:6663   */\n      mload\n        /* \"#utility.yul\":6641:6663   */\n      swap1\n      pop\n        /* \"#utility.yul\":6571:6670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6676:6845   */\n    tag_129:\n        /* \"#utility.yul\":6760:6771   */\n      0x00\n        /* \"#utility.yul\":6794:6800   */\n      dup3\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6782:6801   */\n      mstore\n        /* \"#utility.yul\":6834:6838   */\n      0x20\n        /* \"#utility.yul\":6829:6832   */\n      dup3\n        /* \"#utility.yul\":6825:6839   */\n      add\n        /* \"#utility.yul\":6810:6839   */\n      swap1\n      pop\n        /* \"#utility.yul\":6676:6845   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:7156   */\n    tag_65:\n        /* \"#utility.yul\":6891:6894   */\n      0x00\n        /* \"#utility.yul\":6910:6930   */\n      tag_184\n        /* \"#utility.yul\":6928:6929   */\n      dup3\n        /* \"#utility.yul\":6910:6930   */\n      tag_162\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6905:6930   */\n      swap2\n      pop\n        /* \"#utility.yul\":6944:6964   */\n      tag_185\n        /* \"#utility.yul\":6962:6963   */\n      dup4\n        /* \"#utility.yul\":6944:6964   */\n      tag_162\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6939:6964   */\n      swap3\n      pop\n        /* \"#utility.yul\":7098:7099   */\n      dup3\n        /* \"#utility.yul\":7030:7096   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7026:7100   */\n      sub\n        /* \"#utility.yul\":7023:7024   */\n      dup3\n        /* \"#utility.yul\":7020:7101   */\n      gt\n        /* \"#utility.yul\":7017:7124   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":7104:7122   */\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7017:7124   */\n    tag_186:\n        /* \"#utility.yul\":7148:7149   */\n      dup3\n        /* \"#utility.yul\":7145:7146   */\n      dup3\n        /* \"#utility.yul\":7141:7150   */\n      add\n        /* \"#utility.yul\":7134:7150   */\n      swap1\n      pop\n        /* \"#utility.yul\":6851:7156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7162:7347   */\n    tag_85:\n        /* \"#utility.yul\":7202:7203   */\n      0x00\n        /* \"#utility.yul\":7219:7239   */\n      tag_190\n        /* \"#utility.yul\":7237:7238   */\n      dup3\n        /* \"#utility.yul\":7219:7239   */\n      tag_162\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7214:7239   */\n      swap2\n      pop\n        /* \"#utility.yul\":7253:7273   */\n      tag_191\n        /* \"#utility.yul\":7271:7272   */\n      dup4\n        /* \"#utility.yul\":7253:7273   */\n      tag_162\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7248:7273   */\n      swap3\n      pop\n        /* \"#utility.yul\":7292:7293   */\n      dup3\n        /* \"#utility.yul\":7282:7317   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":7297:7315   */\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7282:7317   */\n    tag_192:\n        /* \"#utility.yul\":7339:7340   */\n      dup3\n        /* \"#utility.yul\":7336:7337   */\n      dup3\n        /* \"#utility.yul\":7332:7341   */\n      div\n        /* \"#utility.yul\":7327:7341   */\n      swap1\n      pop\n        /* \"#utility.yul\":7162:7347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7353:7701   */\n    tag_93:\n        /* \"#utility.yul\":7393:7400   */\n      0x00\n        /* \"#utility.yul\":7416:7436   */\n      tag_196\n        /* \"#utility.yul\":7434:7435   */\n      dup3\n        /* \"#utility.yul\":7416:7436   */\n      tag_162\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7411:7436   */\n      swap2\n      pop\n        /* \"#utility.yul\":7450:7470   */\n      tag_197\n        /* \"#utility.yul\":7468:7469   */\n      dup4\n        /* \"#utility.yul\":7450:7470   */\n      tag_162\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7445:7470   */\n      swap3\n      pop\n        /* \"#utility.yul\":7638:7639   */\n      dup2\n        /* \"#utility.yul\":7570:7636   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7566:7640   */\n      div\n        /* \"#utility.yul\":7563:7564   */\n      dup4\n        /* \"#utility.yul\":7560:7641   */\n      gt\n        /* \"#utility.yul\":7555:7556   */\n      dup3\n        /* \"#utility.yul\":7548:7557   */\n      iszero\n        /* \"#utility.yul\":7541:7558   */\n      iszero\n        /* \"#utility.yul\":7537:7642   */\n      and\n        /* \"#utility.yul\":7534:7665   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":7645:7663   */\n      tag_199\n      tag_188\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7534:7665   */\n    tag_198:\n        /* \"#utility.yul\":7693:7694   */\n      dup3\n        /* \"#utility.yul\":7690:7691   */\n      dup3\n        /* \"#utility.yul\":7686:7695   */\n      mul\n        /* \"#utility.yul\":7675:7695   */\n      swap1\n      pop\n        /* \"#utility.yul\":7353:7701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7707:7898   */\n    tag_76:\n        /* \"#utility.yul\":7747:7751   */\n      0x00\n        /* \"#utility.yul\":7767:7787   */\n      tag_201\n        /* \"#utility.yul\":7785:7786   */\n      dup3\n        /* \"#utility.yul\":7767:7787   */\n      tag_162\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7762:7787   */\n      swap2\n      pop\n        /* \"#utility.yul\":7801:7821   */\n      tag_202\n        /* \"#utility.yul\":7819:7820   */\n      dup4\n        /* \"#utility.yul\":7801:7821   */\n      tag_162\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7796:7821   */\n      swap3\n      pop\n        /* \"#utility.yul\":7840:7841   */\n      dup3\n        /* \"#utility.yul\":7837:7838   */\n      dup3\n        /* \"#utility.yul\":7834:7842   */\n      lt\n        /* \"#utility.yul\":7831:7865   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":7845:7863   */\n      tag_204\n      tag_188\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7831:7865   */\n    tag_203:\n        /* \"#utility.yul\":7890:7891   */\n      dup3\n        /* \"#utility.yul\":7887:7888   */\n      dup3\n        /* \"#utility.yul\":7883:7892   */\n      sub\n        /* \"#utility.yul\":7875:7892   */\n      swap1\n      pop\n        /* \"#utility.yul\":7707:7898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8000   */\n    tag_123:\n        /* \"#utility.yul\":7941:7948   */\n      0x00\n        /* \"#utility.yul\":7970:7994   */\n      tag_206\n        /* \"#utility.yul\":7988:7993   */\n      dup3\n        /* \"#utility.yul\":7970:7994   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7959:7994   */\n      swap1\n      pop\n        /* \"#utility.yul\":7904:8000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8006:8132   */\n    tag_207:\n        /* \"#utility.yul\":8043:8050   */\n      0x00\n        /* \"#utility.yul\":8083:8125   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8076:8081   */\n      dup3\n        /* \"#utility.yul\":8072:8126   */\n      and\n        /* \"#utility.yul\":8061:8126   */\n      swap1\n      pop\n        /* \"#utility.yul\":8006:8132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8138:8215   */\n    tag_162:\n        /* \"#utility.yul\":8175:8182   */\n      0x00\n        /* \"#utility.yul\":8204:8209   */\n      dup2\n        /* \"#utility.yul\":8193:8209   */\n      swap1\n      pop\n        /* \"#utility.yul\":8138:8215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8221:8528   */\n    tag_131:\n        /* \"#utility.yul\":8289:8290   */\n      0x00\n        /* \"#utility.yul\":8299:8412   */\n    tag_211:\n        /* \"#utility.yul\":8313:8319   */\n      dup4\n        /* \"#utility.yul\":8310:8311   */\n      dup2\n        /* \"#utility.yul\":8307:8320   */\n      lt\n        /* \"#utility.yul\":8299:8412   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":8398:8399   */\n      dup1\n        /* \"#utility.yul\":8393:8396   */\n      dup3\n        /* \"#utility.yul\":8389:8400   */\n      add\n        /* \"#utility.yul\":8383:8401   */\n      mload\n        /* \"#utility.yul\":8379:8380   */\n      dup2\n        /* \"#utility.yul\":8374:8377   */\n      dup5\n        /* \"#utility.yul\":8370:8381   */\n      add\n        /* \"#utility.yul\":8363:8402   */\n      mstore\n        /* \"#utility.yul\":8335:8337   */\n      0x20\n        /* \"#utility.yul\":8332:8333   */\n      dup2\n        /* \"#utility.yul\":8328:8338   */\n      add\n        /* \"#utility.yul\":8323:8338   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8412   */\n      jump(tag_211)\n    tag_213:\n        /* \"#utility.yul\":8430:8436   */\n      dup4\n        /* \"#utility.yul\":8427:8428   */\n      dup2\n        /* \"#utility.yul\":8424:8437   */\n      gt\n        /* \"#utility.yul\":8421:8522   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":8510:8511   */\n      0x00\n        /* \"#utility.yul\":8501:8507   */\n      dup5\n        /* \"#utility.yul\":8496:8499   */\n      dup5\n        /* \"#utility.yul\":8492:8508   */\n      add\n        /* \"#utility.yul\":8485:8512   */\n      mstore\n        /* \"#utility.yul\":8421:8522   */\n    tag_214:\n        /* \"#utility.yul\":8270:8528   */\n      pop\n        /* \"#utility.yul\":8221:8528   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8534:8714   */\n    tag_188:\n        /* \"#utility.yul\":8582:8659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8579:8580   */\n      0x00\n        /* \"#utility.yul\":8572:8660   */\n      mstore\n        /* \"#utility.yul\":8679:8683   */\n      0x11\n        /* \"#utility.yul\":8676:8677   */\n      0x04\n        /* \"#utility.yul\":8669:8684   */\n      mstore\n        /* \"#utility.yul\":8703:8707   */\n      0x24\n        /* \"#utility.yul\":8700:8701   */\n      0x00\n        /* \"#utility.yul\":8693:8708   */\n      revert\n        /* \"#utility.yul\":8720:8900   */\n    tag_194:\n        /* \"#utility.yul\":8768:8845   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8765:8766   */\n      0x00\n        /* \"#utility.yul\":8758:8846   */\n      mstore\n        /* \"#utility.yul\":8865:8869   */\n      0x12\n        /* \"#utility.yul\":8862:8863   */\n      0x04\n        /* \"#utility.yul\":8855:8870   */\n      mstore\n        /* \"#utility.yul\":8889:8893   */\n      0x24\n        /* \"#utility.yul\":8886:8887   */\n      0x00\n        /* \"#utility.yul\":8879:8894   */\n      revert\n        /* \"#utility.yul\":9029:9146   */\n    tag_113:\n        /* \"#utility.yul\":9138:9139   */\n      0x00\n        /* \"#utility.yul\":9135:9136   */\n      dup1\n        /* \"#utility.yul\":9128:9140   */\n      revert\n        /* \"#utility.yul\":9152:9254   */\n    tag_133:\n        /* \"#utility.yul\":9193:9199   */\n      0x00\n        /* \"#utility.yul\":9244:9246   */\n      0x1f\n        /* \"#utility.yul\":9240:9247   */\n      not\n        /* \"#utility.yul\":9235:9237   */\n      0x1f\n        /* \"#utility.yul\":9228:9233   */\n      dup4\n        /* \"#utility.yul\":9224:9238   */\n      add\n        /* \"#utility.yul\":9220:9248   */\n      and\n        /* \"#utility.yul\":9210:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":9152:9254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:9437   */\n    tag_138:\n        /* \"#utility.yul\":9400:9429   */\n      0x4e6f206d696e7420746f20746865207a65726f20616464726573730000000000\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9388:9394   */\n      dup3\n        /* \"#utility.yul\":9384:9398   */\n      add\n        /* \"#utility.yul\":9377:9430   */\n      mstore\n        /* \"#utility.yul\":9260:9437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9443:9618   */\n    tag_143:\n        /* \"#utility.yul\":9583:9610   */\n      0x416c6c20746f6b656e7320616c7265616479206d696e74656400000000000000\n        /* \"#utility.yul\":9579:9580   */\n      0x00\n        /* \"#utility.yul\":9571:9577   */\n      dup3\n        /* \"#utility.yul\":9567:9581   */\n      add\n        /* \"#utility.yul\":9560:9611   */\n      mstore\n        /* \"#utility.yul\":9443:9618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9624:9794   */\n    tag_148:\n        /* \"#utility.yul\":9764:9786   */\n      0x596f75277265206e6f7420746865206f776e6572000000000000000000000000\n        /* \"#utility.yul\":9760:9761   */\n      0x00\n        /* \"#utility.yul\":9752:9758   */\n      dup3\n        /* \"#utility.yul\":9748:9762   */\n      add\n        /* \"#utility.yul\":9741:9787   */\n      mstore\n        /* \"#utility.yul\":9624:9794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9800:9967   */\n    tag_153:\n        /* \"#utility.yul\":9940:9959   */\n      0x4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000\n        /* \"#utility.yul\":9936:9937   */\n      0x00\n        /* \"#utility.yul\":9928:9934   */\n      dup3\n        /* \"#utility.yul\":9924:9938   */\n      add\n        /* \"#utility.yul\":9917:9960   */\n      mstore\n        /* \"#utility.yul\":9800:9967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9973:10154   */\n    tag_158:\n        /* \"#utility.yul\":10113:10146   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":10109:10110   */\n      0x00\n        /* \"#utility.yul\":10101:10107   */\n      dup3\n        /* \"#utility.yul\":10097:10111   */\n      add\n        /* \"#utility.yul\":10090:10147   */\n      mstore\n        /* \"#utility.yul\":9973:10154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10282   */\n    tag_105:\n        /* \"#utility.yul\":10233:10257   */\n      tag_227\n        /* \"#utility.yul\":10251:10256   */\n      dup2\n        /* \"#utility.yul\":10233:10257   */\n      tag_123\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10226:10231   */\n      dup2\n        /* \"#utility.yul\":10223:10258   */\n      eq\n        /* \"#utility.yul\":10213:10276   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":10272:10273   */\n      0x00\n        /* \"#utility.yul\":10269:10270   */\n      dup1\n        /* \"#utility.yul\":10262:10274   */\n      revert\n        /* \"#utility.yul\":10213:10276   */\n    tag_228:\n        /* \"#utility.yul\":10160:10282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10288:10410   */\n    tag_109:\n        /* \"#utility.yul\":10361:10385   */\n      tag_230\n        /* \"#utility.yul\":10379:10384   */\n      dup2\n        /* \"#utility.yul\":10361:10385   */\n      tag_162\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":10354:10359   */\n      dup2\n        /* \"#utility.yul\":10351:10386   */\n      eq\n        /* \"#utility.yul\":10341:10404   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":10400:10401   */\n      0x00\n        /* \"#utility.yul\":10397:10398   */\n      dup1\n        /* \"#utility.yul\":10390:10402   */\n      revert\n        /* \"#utility.yul\":10341:10404   */\n    tag_231:\n        /* \"#utility.yul\":10288:10410   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bbef78b6775f8192852505fa999091da6006dd6670d20a3c59a297e931abbf0f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "7:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:7"
															},
															"nodeType": "YulIf",
															"src": "243:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:7",
														"type": ""
													}
												],
												"src": "156:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:7",
														"type": ""
													}
												],
												"src": "513:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:7",
														"type": ""
													}
												],
												"src": "594:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:7"
															},
															"nodeType": "YulIf",
															"src": "976:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:7",
														"type": ""
													}
												],
												"src": "923:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610e6a380380610e6a83398181016040528101906100329190610094565b80600181905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100e7565b60008151905061008e816100d0565b92915050565b6000602082840312156100aa576100a96100cb565b5b60006100b88482850161007f565b91505092915050565b6000819050919050565b600080fd5b6100d9816100c1565b81146100e457600080fd5b50565b610d74806100f66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063771282f611610071578063771282f6146101545780638da5cb5b1461017257806395d89b4114610190578063a9059cbb146101ae578063a92429fc146101ca578063da0239a6146101d4576100a9565b806306fdde03146100ae57806318160ddd146100cc57806327e235e3146100ea57806340c10f191461011a57806347b5dd5414610136575b600080fd5b6100b66101f2565b6040516100c39190610952565b60405180910390f35b6100d461022b565b6040516100e19190610a14565b60405180910390f35b61010460048036038101906100ff91906107c4565b610231565b6040516101119190610a14565b60405180910390f35b610134600480360381019061012f91906107f1565b610249565b005b61013e610401565b60405161014b9190610a14565b60405180910390f35b61015c610407565b6040516101699190610a14565b60405180910390f35b61017a61040d565b6040516101879190610937565b60405180910390f35b610198610431565b6040516101a59190610952565b60405180910390f35b6101c860048036038101906101c391906107f1565b61046a565b005b6101d2610689565b005b6101dc6106ea565b6040516101e99190610a14565b60405180910390f35b6040518060400160405280601381526020017f5061747269636b20426173696320546f6b656e0000000000000000000000000081525081565b60015481565b60046020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ce906109b4565b60405180910390fd5b600254600154101561031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610994565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561038e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610385906109f4565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103dd9190610a4b565b9250508190555080600260008282546103f69190610a4b565b925050819055505050565b60035481565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600481526020017f504253540000000000000000000000000000000000000000000000000000000081525081565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e3906109d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610974565b60405180910390fd5b60025481111561056b57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105ba9190610b2c565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106109190610a4b565b9250508190555061062081610701565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33458360405161067d9190610a14565b60405180910390a35050565b6000429050600081603c61069d9190610a4b565b9050600081116106e65760026001546106b69190610aa1565b600181905550600280546106ca9190610aa1565b60028190555060026003546106df9190610aa1565b6003819055505b5050565b60006002546001546106fc9190610b2c565b905090565b60016103e8826107119190610aa1565b61071b9190610ad2565b6001600082825461072c9190610b2c565b9250508190555060016103e8826107439190610aa1565b61074d9190610ad2565b6002600082825461075e9190610b2c565b9250508190555060016103e8826107759190610aa1565b61077f9190610ad2565b600360008282546107909190610a4b565b9250508190555050565b6000813590506107a981610d10565b92915050565b6000813590506107be81610d27565b92915050565b6000602082840312156107da576107d9610c2d565b5b60006107e88482850161079a565b91505092915050565b6000806040838503121561080857610807610c2d565b5b60006108168582860161079a565b9250506020610827858286016107af565b9150509250929050565b61083a81610b60565b82525050565b600061084b82610a2f565b6108558185610a3a565b9350610865818560208601610b9c565b61086e81610c32565b840191505092915050565b6000610886601b83610a3a565b915061089182610c43565b602082019050919050565b60006108a9601983610a3a565b91506108b482610c6c565b602082019050919050565b60006108cc601483610a3a565b91506108d782610c95565b602082019050919050565b60006108ef601183610a3a565b91506108fa82610cbe565b602082019050919050565b6000610912601f83610a3a565b915061091d82610ce7565b602082019050919050565b61093181610b92565b82525050565b600060208201905061094c6000830184610831565b92915050565b6000602082019050818103600083015261096c8184610840565b905092915050565b6000602082019050818103600083015261098d81610879565b9050919050565b600060208201905081810360008301526109ad8161089c565b9050919050565b600060208201905081810360008301526109cd816108bf565b9050919050565b600060208201905081810360008301526109ed816108e2565b9050919050565b60006020820190508181036000830152610a0d81610905565b9050919050565b6000602082019050610a296000830184610928565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610a5682610b92565b9150610a6183610b92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9657610a95610bcf565b5b828201905092915050565b6000610aac82610b92565b9150610ab783610b92565b925082610ac757610ac6610bfe565b5b828204905092915050565b6000610add82610b92565b9150610ae883610b92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2157610b20610bcf565b5b828202905092915050565b6000610b3782610b92565b9150610b4283610b92565b925082821015610b5557610b54610bcf565b5b828203905092915050565b6000610b6b82610b72565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610bba578082015181840152602081019050610b9f565b83811115610bc9576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f206d696e7420746f20746865207a65726f20616464726573730000000000600082015250565b7f416c6c20746f6b656e7320616c7265616479206d696e74656400000000000000600082015250565b7f596f75277265206e6f7420746865206f776e6572000000000000000000000000600082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b610d1981610b60565b8114610d2457600080fd5b50565b610d3081610b92565b8114610d3b57600080fd5b5056fea2646970667358221220bbef78b6775f8192852505fa999091da6006dd6670d20a3c59a297e931abbf0f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE6A CODESIZE SUB DUP1 PUSH2 0xE6A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x94 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8E DUP2 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA JUMPI PUSH2 0xA9 PUSH2 0xCB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8 DUP5 DUP3 DUP6 ADD PUSH2 0x7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0xC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD74 DUP1 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771282F6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x771282F6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA92429FC EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x1D4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x47B5DD54 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5061747269636B20426173696320546F6B656E00000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5042535400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x620 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3990DB2D31862302A685E8086B5755072A6E2B5B780AF1EE81ECE35EE3CD3345 DUP4 PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3C PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6E6 JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x3 SLOAD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x71B SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x74D SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A9 DUP2 PUSH2 0xD10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BE DUP2 PUSH2 0xD27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E8 DUP5 DUP3 DUP6 ADD PUSH2 0x79A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x816 DUP6 DUP3 DUP7 ADD PUSH2 0x79A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x827 DUP6 DUP3 DUP7 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84B DUP3 PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x855 DUP2 DUP6 PUSH2 0xA3A JUMP JUMPDEST SWAP4 POP PUSH2 0x865 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0xC32 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x886 PUSH1 0x1B DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x891 DUP3 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x19 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x14 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x11 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x1F DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x931 DUP2 PUSH2 0xB92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96C DUP2 DUP5 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9ED DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x928 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB7 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADD DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xAE8 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xB42 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206D696E7420746F20746865207A65726F20616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E7320616C7265616479206D696E74656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75277265206E6F7420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD19 DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD30 DUP2 PUSH2 0xB92 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xEF PUSH25 0xB6775F8192852505FA999091DA6006DD6670D20A3C59A297E9 BALANCE 0xAB 0xBF 0xF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "250:1880:6:-:0;;;647:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:12;688:11;:26;;;;732:10;724:5;;:18;;;;;;;;;;;;;;;;;;647:102;250:1880;;7:143:7;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;250:1880:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balances_894": {
									"entryPoint": 561,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1064": {
									"entryPoint": 1793,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burnedTokens_881": {
									"entryPoint": 1025,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentSupply_879": {
									"entryPoint": 1031,
									"id": 879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@halfing_1102": {
									"entryPoint": 1673,
									"id": 1102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_966": {
									"entryPoint": 585,
									"id": 966,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_884": {
									"entryPoint": 498,
									"id": 884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_875": {
									"entryPoint": 1037,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@remainingSupply_1034": {
									"entryPoint": 1770,
									"id": 1034,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_887": {
									"entryPoint": 1073,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_877": {
									"entryPoint": 555,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transfer_1024": {
									"entryPoint": 1130,
									"id": 1024,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10413:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "7:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:7",
														"type": ""
													}
												],
												"src": "152:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:7"
															},
															"nodeType": "YulIf",
															"src": "373:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:7",
														"type": ""
													}
												],
												"src": "297:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:7"
															},
															"nodeType": "YulIf",
															"src": "725:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:7",
														"type": ""
													}
												],
												"src": "632:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1194:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1199:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1199:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1172:3:7",
														"type": ""
													}
												],
												"src": "1112:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1338:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1385:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1352:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1342:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1400:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1466:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1407:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1513:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1520:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1509:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1527:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1532:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1487:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1548:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1559:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1586:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1564:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1548:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1309:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1316:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1324:3:7",
														"type": ""
													}
												],
												"src": "1236:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1762:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1828:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1769:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1762:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1934:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4",
																	"nodeType": "YulIdentifier",
																	"src": "1845:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1947:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1958:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1963:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1740:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1748:3:7",
														"type": ""
													}
												],
												"src": "1606:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2124:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2134:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2141:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2141:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2306:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce",
																	"nodeType": "YulIdentifier",
																	"src": "2217:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2217:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2319:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2330:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2112:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2120:3:7",
														"type": ""
													}
												],
												"src": "1978:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2496:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2506:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2513:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2506:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2678:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																	"nodeType": "YulIdentifier",
																	"src": "2589:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2589:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2702:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2707:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2691:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2484:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2492:3:7",
														"type": ""
													}
												],
												"src": "2350:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2868:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2878:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2944:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2949:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2885:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3050:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																	"nodeType": "YulIdentifier",
																	"src": "2961:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2961:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3074:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3079:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3070:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3070:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2856:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2864:3:7",
														"type": ""
													}
												],
												"src": "2722:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3240:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3250:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3316:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3257:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3422:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "3333:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3333:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3333:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3435:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3446:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3451:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3442:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3442:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3228:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3236:3:7",
														"type": ""
													}
												],
												"src": "3094:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3531:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3548:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3571:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3553:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3519:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3526:3:7",
														"type": ""
													}
												],
												"src": "3466:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3688:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3698:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3710:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3698:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3778:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3734:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3734:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3660:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3672:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3683:4:7",
														"type": ""
													}
												],
												"src": "3590:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3936:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3946:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3954:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3946:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4004:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3989:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3989:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4012:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4018:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4008:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4008:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3982:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4038:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4110:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4119:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4046:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4038:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3908:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3920:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3931:4:7",
														"type": ""
													}
												],
												"src": "3818:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4308:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4318:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4384:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4390:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4380:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4410:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4544:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4418:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4410:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4288:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4303:4:7",
														"type": ""
													}
												],
												"src": "4137:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4733:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4743:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4755:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4743:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4790:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4801:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4786:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4809:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4815:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4805:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4779:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4835:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4843:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4835:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4728:4:7",
														"type": ""
													}
												],
												"src": "4562:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5158:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5176:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5234:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5240:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5230:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5204:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5260:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5394:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5268:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5260:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5138:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:7",
														"type": ""
													}
												],
												"src": "4987:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5583:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5605:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5616:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5601:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5593:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5640:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5651:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5636:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5659:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5655:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5655:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5685:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5819:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5693:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5685:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5563:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5578:4:7",
														"type": ""
													}
												],
												"src": "5412:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6008:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6018:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6030:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6018:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6076:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6061:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6061:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6084:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6090:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6080:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6080:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6054:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6054:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6110:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6244:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6110:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5988:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6003:4:7",
														"type": ""
													}
												],
												"src": "5837:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6360:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6370:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6382:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6393:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6370:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6450:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6463:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6474:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6459:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6459:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6406:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6406:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6332:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6344:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6355:4:7",
														"type": ""
													}
												],
												"src": "6262:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6540:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6550:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6523:6:7",
														"type": ""
													}
												],
												"src": "6490:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6630:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6641:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6657:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6651:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6613:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6623:6:7",
														"type": ""
													}
												],
												"src": "6571:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6772:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6794:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6810:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6829:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6834:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6810:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6744:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6749:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6760:11:7",
														"type": ""
													}
												],
												"src": "6676:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6895:261:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6905:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6928:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6910:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6905:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6939:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6962:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6944:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6939:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7102:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7104:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7104:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7104:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7030:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7098:1:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:74:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7020:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7020:81:7"
															},
															"nodeType": "YulIf",
															"src": "7017:107:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7145:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7148:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6882:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6885:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6891:3:7",
														"type": ""
													}
												],
												"src": "6851:305:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7204:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7214:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7237:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7219:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7214:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7248:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7271:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7253:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7248:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7295:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7297:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7297:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7297:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7292:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:9:7"
															},
															"nodeType": "YulIf",
															"src": "7282:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7327:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7336:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7339:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7332:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7332:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7327:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7193:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7196:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7202:1:7",
														"type": ""
													}
												],
												"src": "7162:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7401:300:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7411:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7434:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7416:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7411:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7445:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7468:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7450:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7445:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7643:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7645:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7645:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7645:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7555:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7548:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7548:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7541:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7563:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7570:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7638:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7566:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7566:74:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7560:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:81:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7537:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:105:7"
															},
															"nodeType": "YulIf",
															"src": "7534:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7675:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7693:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7686:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7675:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7384:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7387:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7393:7:7",
														"type": ""
													}
												],
												"src": "7353:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7752:146:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7762:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7785:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7767:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7762:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7796:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7819:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7801:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7801:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7796:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7843:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7845:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7845:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7845:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7837:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7840:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7834:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7834:8:7"
															},
															"nodeType": "YulIf",
															"src": "7831:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7875:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7887:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7890:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7875:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7738:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7741:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7747:4:7",
														"type": ""
													}
												],
												"src": "7707:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7949:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7959:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7988:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7970:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7959:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7931:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7941:7:7",
														"type": ""
													}
												],
												"src": "7904:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8051:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8061:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8076:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8083:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8072:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8072:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8061:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8033:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8043:7:7",
														"type": ""
													}
												],
												"src": "8006:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8183:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8193:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8204:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8193:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8165:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8175:7:7",
														"type": ""
													}
												],
												"src": "8138:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8270:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8280:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8289:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8284:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8349:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8374:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8379:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8370:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8370:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8393:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8398:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8389:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8389:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8383:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8383:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8363:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8363:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8363:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8310:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8313:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8307:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8321:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8323:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8332:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8335:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8328:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8328:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8323:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8303:3:7",
																"statements": []
															},
															"src": "8299:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8446:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8496:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8501:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8492:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8492:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8510:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8485:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8485:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8485:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8427:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8430:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8424:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8424:13:7"
															},
															"nodeType": "YulIf",
															"src": "8421:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8252:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8257:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8262:6:7",
														"type": ""
													}
												],
												"src": "8221:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8562:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8579:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8572:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8572:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8676:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8679:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8669:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8669:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8700:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8703:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8693:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8693:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8534:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8748:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8765:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8768:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8758:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8758:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8758:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8865:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8855:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8889:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8879:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8879:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8879:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8720:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8995:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9012:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9015:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9005:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8906:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9118:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9135:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9128:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9128:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9128:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9029:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9200:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9210:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9228:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9235:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9224:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9244:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9240:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9240:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9220:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9220:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9210:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9183:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9193:6:7",
														"type": ""
													}
												],
												"src": "9152:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9366:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9388:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9396:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9384:14:7"
																	},
																	{
																		"hexValue": "4e6f206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9400:29:7",
																		"type": "",
																		"value": "No mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9377:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9377:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9358:6:7",
														"type": ""
													}
												],
												"src": "9260:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9549:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9571:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9567:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9567:14:7"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e7320616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9583:27:7",
																		"type": "",
																		"value": "All tokens already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9560:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9541:6:7",
														"type": ""
													}
												],
												"src": "9443:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9730:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9752:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9760:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9748:14:7"
																	},
																	{
																		"hexValue": "596f75277265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9764:22:7",
																		"type": "",
																		"value": "You're not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9741:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9741:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9741:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9722:6:7",
														"type": ""
													}
												],
												"src": "9624:170:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9906:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9928:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9936:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9924:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9940:19:7",
																		"type": "",
																		"value": "Not enough tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9898:6:7",
														"type": ""
													}
												],
												"src": "9800:167:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10079:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10101:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10097:14:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10113:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10090:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10071:6:7",
														"type": ""
													}
												],
												"src": "9973:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10203:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10260:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10269:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10272:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10262:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10262:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10262:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10226:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10251:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10233:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10233:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10223:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10223:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:43:7"
															},
															"nodeType": "YulIf",
															"src": "10213:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10196:5:7",
														"type": ""
													}
												],
												"src": "10160:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10331:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10388:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10397:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10400:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10390:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10390:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10390:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10354:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10379:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10361:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10361:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10351:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10351:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:43:7"
															},
															"nodeType": "YulIf",
															"src": "10341:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10324:5:7",
														"type": ""
													}
												],
												"src": "10288:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce(memPtr) {\n\n        mstore(add(memPtr, 0), \"All tokens already minted\")\n\n    }\n\n    function store_literal_in_memory_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"You're not the owner\")\n\n    }\n\n    function store_literal_in_memory_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063771282f611610071578063771282f6146101545780638da5cb5b1461017257806395d89b4114610190578063a9059cbb146101ae578063a92429fc146101ca578063da0239a6146101d4576100a9565b806306fdde03146100ae57806318160ddd146100cc57806327e235e3146100ea57806340c10f191461011a57806347b5dd5414610136575b600080fd5b6100b66101f2565b6040516100c39190610952565b60405180910390f35b6100d461022b565b6040516100e19190610a14565b60405180910390f35b61010460048036038101906100ff91906107c4565b610231565b6040516101119190610a14565b60405180910390f35b610134600480360381019061012f91906107f1565b610249565b005b61013e610401565b60405161014b9190610a14565b60405180910390f35b61015c610407565b6040516101699190610a14565b60405180910390f35b61017a61040d565b6040516101879190610937565b60405180910390f35b610198610431565b6040516101a59190610952565b60405180910390f35b6101c860048036038101906101c391906107f1565b61046a565b005b6101d2610689565b005b6101dc6106ea565b6040516101e99190610a14565b60405180910390f35b6040518060400160405280601381526020017f5061747269636b20426173696320546f6b656e0000000000000000000000000081525081565b60015481565b60046020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ce906109b4565b60405180910390fd5b600254600154101561031e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031590610994565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561038e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610385906109f4565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103dd9190610a4b565b9250508190555080600260008282546103f69190610a4b565b925050819055505050565b60035481565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600481526020017f504253540000000000000000000000000000000000000000000000000000000081525081565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111156104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e3906109d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055390610974565b60405180910390fd5b60025481111561056b57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105ba9190610b2c565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106109190610a4b565b9250508190555061062081610701565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33458360405161067d9190610a14565b60405180910390a35050565b6000429050600081603c61069d9190610a4b565b9050600081116106e65760026001546106b69190610aa1565b600181905550600280546106ca9190610aa1565b60028190555060026003546106df9190610aa1565b6003819055505b5050565b60006002546001546106fc9190610b2c565b905090565b60016103e8826107119190610aa1565b61071b9190610ad2565b6001600082825461072c9190610b2c565b9250508190555060016103e8826107439190610aa1565b61074d9190610ad2565b6002600082825461075e9190610b2c565b9250508190555060016103e8826107759190610aa1565b61077f9190610ad2565b600360008282546107909190610a4b565b9250508190555050565b6000813590506107a981610d10565b92915050565b6000813590506107be81610d27565b92915050565b6000602082840312156107da576107d9610c2d565b5b60006107e88482850161079a565b91505092915050565b6000806040838503121561080857610807610c2d565b5b60006108168582860161079a565b9250506020610827858286016107af565b9150509250929050565b61083a81610b60565b82525050565b600061084b82610a2f565b6108558185610a3a565b9350610865818560208601610b9c565b61086e81610c32565b840191505092915050565b6000610886601b83610a3a565b915061089182610c43565b602082019050919050565b60006108a9601983610a3a565b91506108b482610c6c565b602082019050919050565b60006108cc601483610a3a565b91506108d782610c95565b602082019050919050565b60006108ef601183610a3a565b91506108fa82610cbe565b602082019050919050565b6000610912601f83610a3a565b915061091d82610ce7565b602082019050919050565b61093181610b92565b82525050565b600060208201905061094c6000830184610831565b92915050565b6000602082019050818103600083015261096c8184610840565b905092915050565b6000602082019050818103600083015261098d81610879565b9050919050565b600060208201905081810360008301526109ad8161089c565b9050919050565b600060208201905081810360008301526109cd816108bf565b9050919050565b600060208201905081810360008301526109ed816108e2565b9050919050565b60006020820190508181036000830152610a0d81610905565b9050919050565b6000602082019050610a296000830184610928565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610a5682610b92565b9150610a6183610b92565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9657610a95610bcf565b5b828201905092915050565b6000610aac82610b92565b9150610ab783610b92565b925082610ac757610ac6610bfe565b5b828204905092915050565b6000610add82610b92565b9150610ae883610b92565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2157610b20610bcf565b5b828202905092915050565b6000610b3782610b92565b9150610b4283610b92565b925082821015610b5557610b54610bcf565b5b828203905092915050565b6000610b6b82610b72565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610bba578082015181840152602081019050610b9f565b83811115610bc9576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f206d696e7420746f20746865207a65726f20616464726573730000000000600082015250565b7f416c6c20746f6b656e7320616c7265616479206d696e74656400000000000000600082015250565b7f596f75277265206e6f7420746865206f776e6572000000000000000000000000600082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b610d1981610b60565b8114610d2457600080fd5b50565b610d3081610b92565b8114610d3b57600080fd5b5056fea2646970667358221220bbef78b6775f8192852505fa999091da6006dd6670d20a3c59a297e931abbf0f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771282F6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x771282F6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xA92429FC EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x1D4 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x47B5DD54 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5061747269636B20426173696320546F6B656E00000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CE SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP1 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x385 SWAP1 PUSH2 0x9F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5042535400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E3 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x620 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3990DB2D31862302A685E8086B5755072A6E2B5B780AF1EE81ECE35EE3CD3345 DUP4 PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3C PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6E6 JUMPI PUSH1 0x2 PUSH1 0x1 SLOAD PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP1 SLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x3 SLOAD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x71B SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x743 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x74D SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0xB2C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH2 0x3E8 DUP3 PUSH2 0x775 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x77F SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7A9 DUP2 PUSH2 0xD10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BE DUP2 PUSH2 0xD27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E8 DUP5 DUP3 DUP6 ADD PUSH2 0x79A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0xC2D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x816 DUP6 DUP3 DUP7 ADD PUSH2 0x79A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x827 DUP6 DUP3 DUP7 ADD PUSH2 0x7AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84B DUP3 PUSH2 0xA2F JUMP JUMPDEST PUSH2 0x855 DUP2 DUP6 PUSH2 0xA3A JUMP JUMPDEST SWAP4 POP PUSH2 0x865 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x86E DUP2 PUSH2 0xC32 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x886 PUSH1 0x1B DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x891 DUP3 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH1 0x19 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH1 0x14 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8D7 DUP3 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EF PUSH1 0x11 DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x8FA DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH1 0x1F DUP4 PUSH2 0xA3A JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x931 DUP2 PUSH2 0xB92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96C DUP2 DUP5 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x98D DUP2 PUSH2 0x879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x8BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9ED DUP2 PUSH2 0x8E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA29 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x928 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAC DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB7 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAC7 JUMPI PUSH2 0xAC6 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADD DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xAE8 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP3 PUSH2 0xB92 JUMP JUMPDEST SWAP2 POP PUSH2 0xB42 DUP4 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB54 PUSH2 0xBCF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xB9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206D696E7420746F20746865207A65726F20616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C6C20746F6B656E7320616C7265616479206D696E74656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F75277265206E6F7420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xD19 DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD30 DUP2 PUSH2 0xB92 JUMP JUMPDEST DUP2 EQ PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xEF PUSH25 0xB6775F8192852505FA999091DA6006DD6670D20A3C59A297E9 BALANCE 0xAB 0xBF 0xF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "250:1880:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;528:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;363:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;450:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1149:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1841:287;;;:::i;:::-;;1554:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:51;;;;;;;;;;;;;;;;;;;:::o;303:23::-;;;;:::o;528:40::-;;;;;;;;;;;;;;;;;:::o;860:283::-;806:5;;;;;;;;;;792:19;;:10;:19;;;784:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;949:13:::1;;934:11;;:28;;926:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1024:1;1010:16;;:2;:16;;;;1002:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1097:6;1081:8;:12;1090:2;1081:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1130:6;1113:13;;:23;;;;;;;:::i;:::-;;;;;;;;860:283:::0;;:::o;363:24::-;;;;:::o;332:25::-;;;;:::o;277:20::-;;;;;;;;;;;;:::o;450:38::-;;;;;;;;;;;;;;;;;;;:::o;1149:399::-;1227:8;:20;1236:10;1227:20;;;;;;;;;;;;;;;;1217:6;:30;;1209:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1301:1;1287:16;;:2;:16;;;;1279:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1363:13;;1353:6;:23;;1345:32;;;;;;1420:6;1396:8;:20;1405:10;1396:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1452:6;1436:8;:12;1445:2;1436:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1477:12;1482:6;1477:4;:12::i;:::-;1530:2;1513:28;;1518:10;1513:28;;;1534:6;1513:28;;;;;;:::i;:::-;;;;;;;;1149:399;;:::o;1841:287::-;1877:14;1894:15;1877:32;;1919:12;1939:9;1934:2;:14;;;;:::i;:::-;1919:29;;1973:1;1962:7;:12;1959:163;;2018:1;2004:11;;:15;;;;:::i;:::-;1990:11;:29;;;;2065:1;2049:13;;:17;;;;:::i;:::-;2033:13;:33;;;;2110:1;2095:12;;:16;;;;:::i;:::-;2080:12;:31;;;;1959:163;1867:261;;1841:287::o;1554:104::-;1601:4;1638:13;;1624:11;;:27;;;;:::i;:::-;1617:34;;1554:104;:::o;1664:171::-;1740:1;1733:4;1724:6;:13;;;;:::i;:::-;:17;;;;:::i;:::-;1709:11;;:32;;;;;;;:::i;:::-;;;;;;;;1784:1;1777:4;1768:6;:13;;;;:::i;:::-;:17;;;;:::i;:::-;1751:13;;:34;;;;;;;:::i;:::-;;;;;;;;1827:1;1820:4;1811:6;:13;;;;:::i;:::-;:17;;;;:::i;:::-;1795:12;;:33;;;;;;;:::i;:::-;;;;;;;;1664:171;:::o;7:139:7:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:118::-;1199:24;1217:5;1199:24;:::i;:::-;1194:3;1187:37;1112:118;;:::o;1236:364::-;1324:3;1352:39;1385:5;1352:39;:::i;:::-;1407:71;1471:6;1466:3;1407:71;:::i;:::-;1400:78;;1487:52;1532:6;1527:3;1520:4;1513:5;1509:16;1487:52;:::i;:::-;1564:29;1586:6;1564:29;:::i;:::-;1559:3;1555:39;1548:46;;1328:272;1236:364;;;;:::o;1606:366::-;1748:3;1769:67;1833:2;1828:3;1769:67;:::i;:::-;1762:74;;1845:93;1934:3;1845:93;:::i;:::-;1963:2;1958:3;1954:12;1947:19;;1606:366;;;:::o;1978:::-;2120:3;2141:67;2205:2;2200:3;2141:67;:::i;:::-;2134:74;;2217:93;2306:3;2217:93;:::i;:::-;2335:2;2330:3;2326:12;2319:19;;1978:366;;;:::o;2350:::-;2492:3;2513:67;2577:2;2572:3;2513:67;:::i;:::-;2506:74;;2589:93;2678:3;2589:93;:::i;:::-;2707:2;2702:3;2698:12;2691:19;;2350:366;;;:::o;2722:::-;2864:3;2885:67;2949:2;2944:3;2885:67;:::i;:::-;2878:74;;2961:93;3050:3;2961:93;:::i;:::-;3079:2;3074:3;3070:12;3063:19;;2722:366;;;:::o;3094:::-;3236:3;3257:67;3321:2;3316:3;3257:67;:::i;:::-;3250:74;;3333:93;3422:3;3333:93;:::i;:::-;3451:2;3446:3;3442:12;3435:19;;3094:366;;;:::o;3466:118::-;3553:24;3571:5;3553:24;:::i;:::-;3548:3;3541:37;3466:118;;:::o;3590:222::-;3683:4;3721:2;3710:9;3706:18;3698:26;;3734:71;3802:1;3791:9;3787:17;3778:6;3734:71;:::i;:::-;3590:222;;;;:::o;3818:313::-;3931:4;3969:2;3958:9;3954:18;3946:26;;4018:9;4012:4;4008:20;4004:1;3993:9;3989:17;3982:47;4046:78;4119:4;4110:6;4046:78;:::i;:::-;4038:86;;3818:313;;;;:::o;4137:419::-;4303:4;4341:2;4330:9;4326:18;4318:26;;4390:9;4384:4;4380:20;4376:1;4365:9;4361:17;4354:47;4418:131;4544:4;4418:131;:::i;:::-;4410:139;;4137:419;;;:::o;4562:::-;4728:4;4766:2;4755:9;4751:18;4743:26;;4815:9;4809:4;4805:20;4801:1;4790:9;4786:17;4779:47;4843:131;4969:4;4843:131;:::i;:::-;4835:139;;4562:419;;;:::o;4987:::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5240:9;5234:4;5230:20;5226:1;5215:9;5211:17;5204:47;5268:131;5394:4;5268:131;:::i;:::-;5260:139;;4987:419;;;:::o;5412:::-;5578:4;5616:2;5605:9;5601:18;5593:26;;5665:9;5659:4;5655:20;5651:1;5640:9;5636:17;5629:47;5693:131;5819:4;5693:131;:::i;:::-;5685:139;;5412:419;;;:::o;5837:::-;6003:4;6041:2;6030:9;6026:18;6018:26;;6090:9;6084:4;6080:20;6076:1;6065:9;6061:17;6054:47;6118:131;6244:4;6118:131;:::i;:::-;6110:139;;5837:419;;;:::o;6262:222::-;6355:4;6393:2;6382:9;6378:18;6370:26;;6406:71;6474:1;6463:9;6459:17;6450:6;6406:71;:::i;:::-;6262:222;;;;:::o;6571:99::-;6623:6;6657:5;6651:12;6641:22;;6571:99;;;:::o;6676:169::-;6760:11;6794:6;6789:3;6782:19;6834:4;6829:3;6825:14;6810:29;;6676:169;;;;:::o;6851:305::-;6891:3;6910:20;6928:1;6910:20;:::i;:::-;6905:25;;6944:20;6962:1;6944:20;:::i;:::-;6939:25;;7098:1;7030:66;7026:74;7023:1;7020:81;7017:107;;;7104:18;;:::i;:::-;7017:107;7148:1;7145;7141:9;7134:16;;6851:305;;;;:::o;7162:185::-;7202:1;7219:20;7237:1;7219:20;:::i;:::-;7214:25;;7253:20;7271:1;7253:20;:::i;:::-;7248:25;;7292:1;7282:35;;7297:18;;:::i;:::-;7282:35;7339:1;7336;7332:9;7327:14;;7162:185;;;;:::o;7353:348::-;7393:7;7416:20;7434:1;7416:20;:::i;:::-;7411:25;;7450:20;7468:1;7450:20;:::i;:::-;7445:25;;7638:1;7570:66;7566:74;7563:1;7560:81;7555:1;7548:9;7541:17;7537:105;7534:131;;;7645:18;;:::i;:::-;7534:131;7693:1;7690;7686:9;7675:20;;7353:348;;;;:::o;7707:191::-;7747:4;7767:20;7785:1;7767:20;:::i;:::-;7762:25;;7801:20;7819:1;7801:20;:::i;:::-;7796:25;;7840:1;7837;7834:8;7831:34;;;7845:18;;:::i;:::-;7831:34;7890:1;7887;7883:9;7875:17;;7707:191;;;;:::o;7904:96::-;7941:7;7970:24;7988:5;7970:24;:::i;:::-;7959:35;;7904:96;;;:::o;8006:126::-;8043:7;8083:42;8076:5;8072:54;8061:65;;8006:126;;;:::o;8138:77::-;8175:7;8204:5;8193:16;;8138:77;;;:::o;8221:307::-;8289:1;8299:113;8313:6;8310:1;8307:13;8299:113;;;8398:1;8393:3;8389:11;8383:18;8379:1;8374:3;8370:11;8363:39;8335:2;8332:1;8328:10;8323:15;;8299:113;;;8430:6;8427:1;8424:13;8421:101;;;8510:1;8501:6;8496:3;8492:16;8485:27;8421:101;8270:258;8221:307;;;:::o;8534:180::-;8582:77;8579:1;8572:88;8679:4;8676:1;8669:15;8703:4;8700:1;8693:15;8720:180;8768:77;8765:1;8758:88;8865:4;8862:1;8855:15;8889:4;8886:1;8879:15;9029:117;9138:1;9135;9128:12;9152:102;9193:6;9244:2;9240:7;9235:2;9228:5;9224:14;9220:28;9210:38;;9152:102;;;:::o;9260:177::-;9400:29;9396:1;9388:6;9384:14;9377:53;9260:177;:::o;9443:175::-;9583:27;9579:1;9571:6;9567:14;9560:51;9443:175;:::o;9624:170::-;9764:22;9760:1;9752:6;9748:14;9741:46;9624:170;:::o;9800:167::-;9940:19;9936:1;9928:6;9924:14;9917:43;9800:167;:::o;9973:181::-;10113:33;10109:1;10101:6;10097:14;10090:57;9973:181;:::o;10160:122::-;10233:24;10251:5;10233:24;:::i;:::-;10226:5;10223:35;10213:63;;10272:1;10269;10262:12;10213:63;10160:122;:::o;10288:::-;10361:24;10379:5;10361:24;:::i;:::-;10354:5;10351:35;10341:63;;10400:1;10397;10390:12;10341:63;10288:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "688800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balances(address)": "2859",
								"burnedTokens()": "2518",
								"currentSupply()": "2429",
								"halfing()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2533",
								"remainingSupply()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2452",
								"transfer(address,uint256)": "infinite"
							},
							"internal": {
								"burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 647,
									"end": 749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 702,
									"end": 714,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 688,
									"end": 699,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 688,
									"end": 714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 688,
									"end": 714,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 688,
									"end": 714,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 688,
									"end": 714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 732,
									"end": 742,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 724,
									"end": 729,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 729,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 724,
									"end": 742,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 742,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 742,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 724,
									"end": 742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 2130,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbef78b6775f8192852505fa999091da6006dd6670d20a3c59a297e931abbf0f64736f6c63430008070033",
									".code": [
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "771282F6"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "771282F6"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "A92429FC"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "DA0239A6"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "47B5DD54"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 2130,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "5061747269636B20426173696320546F6B656E00000000000000000000000000"
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 393,
											"end": 444,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 326,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 303,
											"end": 326,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 528,
											"end": 568,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 806,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 802,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 792,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 811,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 784,
											"end": 836,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 784,
											"end": 836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 949,
											"end": 962,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 949,
											"end": 962,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 945,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 934,
											"end": 945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 934,
											"end": 962,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 934,
											"end": 962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 926,
											"end": 992,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1002,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 860,
											"end": 1143,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 387,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 332,
											"end": 357,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 357,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 277,
											"end": 297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 297,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "PUSH",
											"source": 6,
											"value": "5042535400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 450,
											"end": 488,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1246,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1247,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1247,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1279,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1345,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1404,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1415,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1444,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1436,
											"end": 1458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1477,
											"end": 1489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1489,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1477,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1528,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "3990DB2D31862302A685E8086B5755072A6E2B5B780AF1EE81ECE35EE3CD3345"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1548,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1909,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1936,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1974,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1959,
											"end": 2122,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2004,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2004,
											"end": 2015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2001,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2049,
											"end": 2062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2062,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2033,
											"end": 2066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2066,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2033,
											"end": 2066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2095,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2080,
											"end": 2111,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2111,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2080,
											"end": 2111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 2122,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1959,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 2128,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1651,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1638,
											"end": 1651,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1624,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1658,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1664,
											"end": 1835,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1664,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1737,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1768,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1751,
											"end": 1764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1828,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1811,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1835,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1385,
											"end": 1390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1352,
											"end": 1391,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1352,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1469,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1407,
											"end": 1478,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1478,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1407,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1478,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1530,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1487,
											"end": 1539,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1539,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1487,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1564,
											"end": 1593,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1564,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1564,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1600,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 1828,
											"end": 1831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1769,
											"end": 1836,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1769,
											"end": 1836,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1769,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1762,
											"end": 1836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1762,
											"end": 1836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1934,
											"end": 1937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1947,
											"end": 1966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1947,
											"end": 1966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1972,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2200,
											"end": 2203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2141,
											"end": 2208,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2208,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2141,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2306,
											"end": 2309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2217,
											"end": 2310,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2310,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2217,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 2344,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2572,
											"end": 2575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2513,
											"end": 2580,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2513,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2589,
											"end": 2682,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2589,
											"end": 2682,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2589,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2702,
											"end": 2705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2716,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 2867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2944,
											"end": 2947,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2885,
											"end": 2952,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2952,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2885,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2961,
											"end": 3054,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 3054,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2961,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3070,
											"end": 3082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 3088,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3316,
											"end": 3319,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3257,
											"end": 3324,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3324,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 3257,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3333,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3333,
											"end": 3426,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3426,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3333,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3442,
											"end": 3454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3460,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3466,
											"end": 3584,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3466,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3571,
											"end": 3576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3553,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3553,
											"end": 3577,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3577,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3553,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3584,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3787,
											"end": 3804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3734,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3734,
											"end": 3805,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3734,
											"end": 3805,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3734,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3812,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 3972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 3972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4008,
											"end": 4028,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 4006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3982,
											"end": 4029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4046,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4038,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4131,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4384,
											"end": 4388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4401,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4544,
											"end": 4548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4418,
											"end": 4549,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4549,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4418,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4556,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4825,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4779,
											"end": 4826,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4843,
											"end": 4974,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 4974,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4843,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4981,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5249,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5268,
											"end": 5399,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5399,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5268,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5406,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5593,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5676,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5693,
											"end": 5824,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5824,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5693,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5831,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6018,
											"end": 6044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6100,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6118,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6244,
											"end": 6248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6118,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6118,
											"end": 6249,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6118,
											"end": 6249,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6118,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 6256,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6382,
											"end": 6391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6406,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6262,
											"end": 6484,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6629,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6663,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6670,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 6838,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6825,
											"end": 6839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6845,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6928,
											"end": 6929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6910,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 6930,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 6930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6944,
											"end": 6964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6944,
											"end": 6964,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6944,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7096,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7026,
											"end": 7100,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7020,
											"end": 7101,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7017,
											"end": 7124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7124,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7017,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 7156,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7219,
											"end": 7239,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7219,
											"end": 7239,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7219,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7273,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7248,
											"end": 7273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7282,
											"end": 7317,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7282,
											"end": 7317,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7282,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7341,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7347,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7434,
											"end": 7435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7416,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7411,
											"end": 7436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7411,
											"end": 7436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7468,
											"end": 7469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7470,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7636,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7566,
											"end": 7640,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7641,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7537,
											"end": 7642,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7665,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7534,
											"end": 7665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7645,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7665,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7534,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7675,
											"end": 7695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7701,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7842,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7890,
											"end": 7891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7883,
											"end": 7892,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 7892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7898,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7941,
											"end": 7948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7988,
											"end": 7993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7970,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7970,
											"end": 7994,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7970,
											"end": 7994,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7970,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 7994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 8000,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8043,
											"end": 8050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8125,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8076,
											"end": 8081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8072,
											"end": 8126,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8132,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8215,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8289,
											"end": 8290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8319,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8320,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8389,
											"end": 8400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8374,
											"end": 8377,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8363,
											"end": 8402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8337,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8323,
											"end": 8338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 8299,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8430,
											"end": 8436,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8437,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8522,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8421,
											"end": 8522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8496,
											"end": 8499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8492,
											"end": 8508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8421,
											"end": 8522,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8421,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8528,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8534,
											"end": 8714,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 8534,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8659,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8660,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8679,
											"end": 8683,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8676,
											"end": 8677,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8669,
											"end": 8684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8703,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8708,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8900,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8720,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8768,
											"end": 8845,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8765,
											"end": 8766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8846,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8865,
											"end": 8869,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8855,
											"end": 8870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9146,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9029,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9136,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9128,
											"end": 9140,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9244,
											"end": 9246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9240,
											"end": 9247,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9237,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9228,
											"end": 9233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9248,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9254,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9260,
											"end": 9437,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 9260,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9429,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206D696E7420746F20746865207A65726F20616464726573730000000000"
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9384,
											"end": 9398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9437,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9443,
											"end": 9618,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9443,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9610,
											"name": "PUSH",
											"source": 7,
											"value": "416C6C20746F6B656E7320616C7265616479206D696E74656400000000000000"
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9567,
											"end": 9581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9618,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9624,
											"end": 9794,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9624,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9764,
											"end": 9786,
											"name": "PUSH",
											"source": 7,
											"value": "596F75277265206E6F7420746865206F776E6572000000000000000000000000"
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9787,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9624,
											"end": 9794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9624,
											"end": 9794,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9800,
											"end": 9967,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9800,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 9959,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E73000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9924,
											"end": 9938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9960,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9800,
											"end": 9967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9800,
											"end": 9967,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9973,
											"end": 10154,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9973,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10097,
											"end": 10111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10090,
											"end": 10147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10154,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10160,
											"end": 10282,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 10160,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10251,
											"end": 10256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 10233,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10231,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10223,
											"end": 10258,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10213,
											"end": 10276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10270,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10262,
											"end": 10274,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10276,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 10213,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10160,
											"end": 10282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10160,
											"end": 10282,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10288,
											"end": 10410,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 10288,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 10379,
											"end": 10384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 10361,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10354,
											"end": 10359,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10386,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 10341,
											"end": 10404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 10402,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10341,
											"end": 10404,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 10341,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10288,
											"end": 10410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10288,
											"end": 10410,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"burnedTokens()": "47b5dd54",
							"currentSupply()": "771282f6",
							"halfing()": "a92429fc",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"remainingSupply()": "da0239a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halfing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":\"basicToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol\":{\"keccak256\":\"0x23e56acb463f047c76495d3f8bcacc654173ebabdbcf2827b0530f6846bd4607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0594647b0e4375881ce7a825af113ca742e449997ccfe8c30e2e228aa55a7ed\",\"dweb:/ipfs/QmPQnv1Auy9D24iUkRwLSBoNm6ZKxNkzAuQeXmJ93SL7bX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 875,
								"contract": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol:basicToken",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 877,
								"contract": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol:basicToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 879,
								"contract": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol:basicToken",
								"label": "currentSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 881,
								"contract": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol:basicToken",
								"label": "burnedTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 894,
								"contract": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol:basicToken",
								"label": "balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							868
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 869,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 868,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								868
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							868
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 778,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 847,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 869,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 868,
										"src": "1419:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1428:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 846,
										"src": "1436:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								846,
								777,
								868
							],
							"name": "ERC20",
							"nameLocation": "1410:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1457:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1509:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 132,
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1583:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1618:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1644:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2032:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2042:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2050:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2065:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1988:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2009:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:1"
									},
									"scope": 699,
									"src": "1976:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										833
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2223:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2240:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2233:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2208:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:1"
									},
									"scope": 699,
									"src": "2154:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										839
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2436:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2446:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2421:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:1"
									},
									"scope": 699,
									"src": "2365:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3156:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3166:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3149:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:1"
									},
									"scope": 699,
									"src": "3091:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3312:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3329:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3322:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3303:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:1"
									},
									"scope": 699,
									"src": "3242:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3489:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3506:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3516:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3499:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3425:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3480:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:1"
									},
									"scope": 699,
									"src": "3406:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3812:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3822:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "3838:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3877:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3881:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3860:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3898:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3745:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3757:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3806:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:1"
									},
									"scope": 699,
									"src": "3727:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4072:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4089:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4101:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4108:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4082:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3993:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4008:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4063:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:1"
									},
									"scope": 699,
									"src": "3974:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4520:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4530:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "4546:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4577:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4593:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4568:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4610:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4465:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4514:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:1"
									},
									"scope": 699,
									"src": "4431:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5323:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5333:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "5351:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5389:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5395:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5404:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "5373:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5437:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5441:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5421:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5458:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5243:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5263:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5317:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:1"
									},
									"scope": 699,
									"src": "5190:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5965:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5975:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "5991:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6029:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6048:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6055:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6038:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6066:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "6013:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6087:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5898:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5915:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5959:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:1"
									},
									"scope": 699,
									"src": "5871:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6691:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6701:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "6717:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6739:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6776:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6783:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6766:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6809:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6829:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6929:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6936:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6945:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6964:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6920:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "7001:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6619:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6636:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6685:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:1"
									},
									"scope": 699,
									"src": "6592:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7581:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7677:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7765:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7771:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7775:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "7744:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7793:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7815:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7825:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7848:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7863:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:1"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7946:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7956:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7964:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7978:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8161:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8171:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8178:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8219:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8225:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8229:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8210:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8205:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8267:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8273:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8277:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8247:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7501:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7523:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7543:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:1"
									},
									"scope": 699,
									"src": "7473:818:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8632:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8650:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8751:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8760:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8718:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8778:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8794:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:1"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:1",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8946:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8956:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8968:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9020:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9029:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8999:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "8994:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9079:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9088:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9047:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8599:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:1"
									},
									"scope": 699,
									"src": "8567:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9487:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9505:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9617:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9575:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9635:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9660:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "9670:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9696:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9714:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:1"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:1",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9793:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "9803:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "9814:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "9831:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:1"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "9930:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9946:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9987:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10008:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "9978:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "9973:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "10046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10067:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "10026:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9437:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9454:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:1"
									},
									"scope": 699,
									"src": "9422:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "10617:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10635:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "10713:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:1"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10784:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10796:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10814:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "10844:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10851:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10860:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10835:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "10830:37:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10531:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10554:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10579:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:1"
									},
									"scope": 699,
									"src": "10504:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11275:321:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "11285:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "11322:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11329:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "11312:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11351:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "11347:243:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "11390:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "11412:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "11432:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:1"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11523:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "11530:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "11539:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "11558:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "11514:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11189:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11212:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:1"
									},
									"scope": 699,
									"src": "11155:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "12299:2:1",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12241:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12261:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:1"
									},
									"scope": 699,
									"src": "12180:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "13007:2:1",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12927:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12949:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12969:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:1"
									},
									"scope": 699,
									"src": "12889:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "1401:11610:1",
							"usedErrors": []
						}
					],
					"src": "105:12907:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 711,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 720,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 777,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 777,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 777,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 777,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 777,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 777,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							868
						],
						"ERC20": [
							699
						],
						"ERC20Burnable": [
							821
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 700,
							"src": "149:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 869,
							"src": "172:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 783,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 868,
										"src": "454:7:3"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:3"
								},
								{
									"baseName": {
										"id": 785,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "463:5:3"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821,
								699,
								846,
								777,
								868
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "623:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 793,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "639:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "653:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 792,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "633:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "633:27:3"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "592:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:3"
									},
									"scope": 821,
									"src": "578:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1039:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 809,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1074:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "1049:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "1111:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "1105:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:3"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1008:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:3"
									},
									"scope": 821,
									"src": "973:161:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 822,
							"src": "419:717:3",
							"usedErrors": []
						}
					],
					"src": "124:1013:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						]
					},
					"id": 847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 847,
							"sourceUnit": 778,
							"src": "135:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 826,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "305:6:4"
									},
									"id": 827,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 825,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 846,
							"linearizedBaseContracts": [
								846,
								777
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 846,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 846,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 842,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 846,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 847,
							"src": "277:405:4",
							"usedErrors": []
						}
					],
					"src": "110:573:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							868
						]
					},
					"id": 869,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 849,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 868,
							"linearizedBaseContracts": [
								868
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 854,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 853,
												"id": 856,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 868,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 863,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 862,
												"id": 865,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 868,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 869,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol": {
				"ast": {
					"absolutePath": "udemy solidity course - complete DApp/Build a Basic Token/ps-token.sol",
					"exportedSymbols": {
						"Context": [
							868
						],
						"ERC20": [
							699
						],
						"ERC20Burnable": [
							821
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							846
						],
						"Ownable": [
							112
						],
						"basicToken": [
							1103
						]
					},
					"id": 1104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 870,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1104,
							"sourceUnit": 700,
							"src": "65:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1104,
							"sourceUnit": 822,
							"src": "121:74:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1104,
							"sourceUnit": 113,
							"src": "196:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "basicToken",
							"nameLocation": "259:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 875,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "292:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "277:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 874,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 877,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "315:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "303:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 876,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "303:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771282f6",
									"id": 879,
									"mutability": "mutable",
									"name": "currentSupply",
									"nameLocation": "344:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "332:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 878,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "332:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47b5dd54",
									"id": 881,
									"mutability": "mutable",
									"name": "burnedTokens",
									"nameLocation": "375:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "363:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 880,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "363:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 884,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "416:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "393:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 882,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "393:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "5061747269636b20426173696320546f6b656e",
										"id": 883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "423:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_847c974811b655f5bf2f53c41fb49b697acfd639b70e730b9425bbfab1d34f0c",
											"typeString": "literal_string \"Patrick Basic Token\""
										},
										"value": "Patrick Basic Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 887,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "473:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "450:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 885,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "450:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "50425354",
										"id": 886,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "482:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b25111499fbb480d5ed09e617e26aa185fc8ae413818f2f3e12028f1310eedf6",
											"typeString": "literal_string \"PBST\""
										},
										"value": "PBST"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 890,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "508:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "494:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 888,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "494:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 889,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "519:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 894,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "560:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1103,
									"src": "528:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 893,
										"keyType": {
											"id": 891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "536:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "528:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 892,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "547:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 902,
									"name": "Sent",
									"nameLocation": "581:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "602:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "586:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "624:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "608:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "633:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "628:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "628:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:55:6"
									},
									"src": "575:66:6"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "678:71:6",
										"statements": [
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "688:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "702:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "688:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "688:26:6"
											},
											{
												"expression": {
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "724:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 912,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "732:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "732:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "724:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "724:18:6"
											}
										]
									},
									"id": 917,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "664:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "659:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "659:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:19:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:0:6"
									},
									"scope": 1103,
									"src": "647:102:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "774:80:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 920,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "792:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "792:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 922,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "806:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "792:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75277265206e6f7420746865206f776e6572",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "813:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															},
															"value": "You're not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd877edd5e6fa1d3691e2f7afcfd78eeb4921b01a5bd60d24e4efa18128af2a5",
																"typeString": "literal_string \"You're not the owner\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "784:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "784:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "784:52:6"
											},
											{
												"id": 927,
												"nodeType": "PlaceholderStatement",
												"src": "846:1:6"
											}
										]
									},
									"id": 929,
									"name": "onlyOwner",
									"nameLocation": "764:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:0:6"
									},
									"src": "755:99:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "916:227:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "934:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 940,
																"name": "currentSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "949:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "934:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e7320616c7265616479206d696e746564",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "964:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce",
																"typeString": "literal_string \"All tokens already minted\""
															},
															"value": "All tokens already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b2e806801312a1976260dea3aeebe8eee5eb243263e3939305412f4c786bdce",
																"typeString": "literal_string \"All tokens already minted\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "926:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "926:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 946,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "1010:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1024:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1016:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1016:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1016:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1010:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1028:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1002:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1002:60:6"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 955,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1081:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 957,
														"indexExpression": {
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "1090:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1081:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 958,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1097:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1081:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "1081:22:6"
											},
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "1113:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 962,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1130:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1113:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "1113:23:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 936,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 935,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 929,
												"src": "906:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "906:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "869:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "891:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "886:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "886:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:25:6"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:6"
									},
									"scope": 1103,
									"src": "860:283:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "1199:349:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 974,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "1217:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 975,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "1227:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 978,
																"indexExpression": {
																	"expression": {
																		"id": 976,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1236:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1236:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1227:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1217:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e73",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1249:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																"typeString": "literal_string \"Not enough tokens\""
															},
															"value": "Not enough tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6a4c292a2678b9c898d987106e4b784681d3ef40e71d741a89ab96444ddb55d",
																"typeString": "literal_string \"Not enough tokens\""
															}
														],
														"id": 973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1209:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1209:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "1209:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "1287:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1301:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1293:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1293:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1293:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1287:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d696e7420746f20746865207a65726f2061646472657373",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4",
																"typeString": "literal_string \"No mint to the zero address\""
															},
															"value": "No mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_297006dd2c4fca96a265607e984936aae2d2fd9cb463ac8d7c4768b1783cfdf4",
																"typeString": "literal_string \"No mint to the zero address\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1279:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "1279:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "1353:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 995,
																"name": "currentSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "1363:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1353:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1345:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "1345:32:6"
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 999,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1396:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1002,
														"indexExpression": {
															"expression": {
																"id": 1000,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1405:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1405:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1396:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1003,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1420:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1396:30:6"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1006,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1436:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1008,
														"indexExpression": {
															"id": 1007,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1445:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1436:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1009,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1452:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1436:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "1436:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1482:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1012,
														"name": "burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1477:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1477:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1477:12:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1017,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1518:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1518:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1530:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "1534:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "Sent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1513:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "1508:33:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1158:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1175:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1167:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1184:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1179:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1179:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:25:6"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1199:0:6"
									},
									"scope": 1103,
									"src": "1149:399:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "1607:51:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1029,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1624:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1030,
														"name": "currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "1638:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1624:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1032,
												"nodeType": "Return",
												"src": "1617:34:6"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "1563:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:2:6"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1601:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1601:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:6:6"
									},
									"scope": 1103,
									"src": "1554:104:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "1699:136:6",
										"statements": [
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1709:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1040,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1724:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "1724:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1740:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1724:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1709:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1709:32:6"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1047,
														"name": "currentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "1751:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1048,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1768:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1777:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "1768:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1784:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1768:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1751:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1751:34:6"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "burnedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "1795:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1811:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1820:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "1811:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1827:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1811:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1795:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "1795:33:6"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1673:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1683:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1678:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1678:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:13:6"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1699:0:6"
									},
									"scope": 1103,
									"src": "1664:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "1867:261:6",
										"statements": [
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "startTime",
														"nameLocation": "1882:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "1877:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1877:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"expression": {
														"id": 1069,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1894:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "1894:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1877:32:6"
											},
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "1924:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "1919:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1919:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3630",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1934:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1075,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1939:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1934:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:29:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1078,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "1962:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1973:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1962:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "1959:163:6",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "1976:146:6",
													"statements": [
														{
															"expression": {
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1081,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "1990:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1082,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "2004:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2018:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2004:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1990:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1086,
															"nodeType": "ExpressionStatement",
															"src": "1990:29:6"
														},
														{
															"expression": {
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1087,
																	"name": "currentSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "2033:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1088,
																		"name": "currentSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "2049:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2065:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2049:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2033:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1092,
															"nodeType": "ExpressionStatement",
															"src": "2033:33:6"
														},
														{
															"expression": {
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1093,
																	"name": "burnedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "2080:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1094,
																		"name": "burnedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "2095:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2110:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2095:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2080:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1098,
															"nodeType": "ExpressionStatement",
															"src": "2080:31:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a92429fc",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "halfing",
									"nameLocation": "1850:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1867:0:6"
									},
									"scope": 1103,
									"src": "1841:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1104,
							"src": "250:1880:6",
							"usedErrors": []
						}
					],
					"src": "32:2098:6"
				},
				"id": 6
			}
		}
	}
}